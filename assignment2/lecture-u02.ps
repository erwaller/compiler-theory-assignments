%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Wed Oct  1 22:34:13 2008
%%DocumentNeededResources: font Symbol
%%+ font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file valtree2.eps
%%+ file valtree.eps
%%+ file parsetree.eps
%%+ procset grops 1.19 1
%%+ font Symbol-Slanted
%%Pages: 27
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
%%BeginResource: font Symbol-Slanted
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Symbol
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Symbol-Slanted
[.89 0.0 15.5 dup sin exch cos div .89 0.0 0.0]
/Symbol
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 122.742(ECE466:Compilers Unit)69.336 60 R(2/pg 1)
2.25 E(\2512008 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Bold@0 SF -.13(Pa)211.93 120 S(rsing -- Ov).13 E(er)-.13 E(view)
-.13 E/F2 13/Times-Roman@0 SF 1.157
(The second phase of front-end analysis is)33.336 156 R F1(parsing)4.407
E F2 7.657(.I)C 4.407(ti)-7.657 G 4.407(st)-4.407 G 1.157
(he parser which is the dri)-4.407 F(ving)-.325 E .8
(force of the front-end, requesting and consuming tok)33.336 171 R .801
(ens from the le)-.13 F(xter)-.195 E 4.051(,a)-.52 G .801(nd performing)
-4.051 F 2.718(semantic analysis and intermediate code generation via e\
mbedded actions, which are)33.336 186 R
(triggered as part of the input are recognized in the frame)33.336 201 Q
-.13(wo)-.325 G(rk of the de\214ned language.).13 E 4.096(While le)
33.336 222 R 4.096(xical rules are one-dimensional, the rules of syntax\
 analysis form a tw)-.195 F(o-)-.13 E .956
(dimensional tree of syntax relationships.)33.336 237 R .955
(The rules which the parser follo)7.456 F .955(ws in b)-.325 F(uilding)
-.26 E .654(this tree form a)33.336 252 R F1(grammar)3.904 E F2 7.154
(.B)C 3.904(yw)-7.154 G .654(ay of e)-4.034 F .655
(xample, here is a simple grammar for arithmetic)-.195 F -.195(ex)33.336
267 S(pressions:).195 E/F3 10/Courier@0 SF 21.6(expr: IDENT)33.336 279 R
(|NUM)90.936 291 Q 6(|')90.936 303 S(\(' expr '\)')-6 E 6(|e)90.936 315
S(xpr '+' expr)-6 E 6(|e)90.936 327 S(xpr '-' expr)-6 E 6(|e)90.936 339
S(xpr '*' expr)-6 E 6(|e)90.936 351 S(xpr '/' expr)-6 E(;)90.936 363 Q
F2 1.383(Grammars are traditionally written in)33.336 384 R F1 1.383
(Backus Naur F)4.633 F 1.383(orm \(BNF\))-.325 F F2 4.632(,a)C 1.382
(nd man)-4.632 F 4.632(yt)-.195 G -.195(ex)-4.632 G(tbooks).195 E 2.161
(use arro)33.336 399 R 2.161
(ws, greek letters and other symbols which aren')-.325 F 5.411(tr)-.234
G 2.161(eadily found on the typical)-5.411 F -.13(ke)33.336 414 S 5.784
(yboard. In)-.065 F 2.533
(these notes, we will adhere to the format used by the parser generator)
5.784 F -.65 -1.56(YA C)33.336 429 T 7.083(C\()1.56 G -1.3(Ye)-7.083 G
7.083(tA)1.3 G 3.834
(nother Compiler Compiler\) and the open-source, compatible program)
-7.083 F(Bison.)33.336 444 Q 1.3(In the e)33.336 465 R 1.299(xample abo)
-.195 F -.195(ve)-.195 G(,).195 E/F4 13/Courier@0 SF(expr)4.549 E F2
1.299(is an e)4.549 F 1.299(xample of a)-.195 F F1(non-terminal)4.549 E
F2 4.549(symbol. The)4.549 F 1.299(name of a)4.549 F .713
(non-terminal, at the be)33.336 480 R .713
(ginning of the line and follo)-.195 F .714
(wed by a :, indicates the start of rules)-.325 F 1.045
(listing all of the possible w)33.336 495 R 1.045
(ays of forming that non-terminal.)-.13 F 1.044
(The choices \(if more than)7.544 F .097(one\) are delimited by the | c\
haracter and terminated by the semicolon.)33.336 510 R .097
(It is also permitted)6.597 F 1.7(to ha)33.336 525 R 2.09 -.195(ve m)
-.26 H 1.699(ultiple rules for the same non-terminal and this is equi)
.195 F -.325(va)-.325 G 1.699(lent to ha).325 F 1.699(ving them)-.26 F
1.924(joined with the | character)33.336 540 R 8.425(.F)-.715 G 1.925
(urthermore, one of the choices can be nothing, i.e.)-8.425 F/F5 13
/Symbol-Slanted SF(e)5.175 E F2(the)5.175 E(empty string.)33.336 555 Q
(This is often used for parts of the language which are optional.)6.5 E
1.342(It is con)33.336 576 R -.195(ve)-.52 G 1.342(ntional to use all U\
PPERCASE for terminal symbols \(a terminal is the same).195 F 2.353
(thing as a tok)33.336 591 R 5.603(en\). Because)-.13 F -.65 -1.56(YA C)
5.603 H 5.603(Cu)1.56 G 2.353(ses inte)-5.603 F 2.353
(gers to represent terminals internally)-.195 F 5.603(,a)-.845 G(nd)
-5.603 E .171(because it starts assigning symbolic terminal names at 25\
7, we can also use single-quoted)33.336 606 R 3.166
(characters directly as terminals, assuming of course that the le)33.336
621 R -.195(xe)-.195 G 6.417(rf).195 G(ollo)-6.417 E 3.167(ws the same)
-.325 F(con)33.336 636 Q -.195(ve)-.52 G(ntion.).195 E .552
(Each possible e)33.336 657 R .552
(xpansion of a non-terminal is called a)-.195 F F1(pr)3.802 E(oduction)
-.234 E F2 7.052(.F)C .552(or our purposes, the)-7.247 F .462
(terms rule and production are equi)33.336 672 R -.325(va)-.325 G 3.713
(lent. W).325 F 3.713(ec)-1.04 G .463(an see that a production must ha)
-3.713 F .853 -.195(ve a n)-.26 H(on-).195 E .904
(terminal as the left-hand side, and can ha)33.336 687 R 1.294 -.195
(ve a r)-.26 H .904(ight-hand side that contains zero or more).195 F
(terminals OR non-terminals.)33.336 702 Q F1(Grammars vs Regular Expr)
170.499 732 Q(essions)-.234 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 2)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF 1.594
(There is a certain similarity between grammar rules and the le)33.336
120 R 1.594(xical rules, e)-.195 F 1.594(xpressed as)-.195 F(Re)33.336
135 Q .294(gular Expressions, which we sa)-.195 F 3.544(wi)-.195 G 3.544
(nU)-3.544 G .294(nit 1.)-3.544 F .294(The dif)6.794 F .294
(ference is that the productions of a)-.325 F 3.097(non-terminal may co\
ntain other non-terminals, including direct or indirect recursion.)
33.336 150 R 1.252(This is what gi)33.336 165 R -.195(ve)-.325 G 4.502
(st).195 G 1.251
(he grammar a 2-dimensional feel, as opposed to the linear w)-4.502 F
1.251(orld of)-.13 F(re)33.336 180 Q(gular e)-.195 E(xpressions.)-.195 E
(Ob)33.336 201 Q(viously)-.195 E 3.293(,s)-.845 G .043
(ince the entire input stream of the program must pass through le)-3.293
F .043(xical analysis)-.195 F .147(\214rst, the re)33.336 216 R .147
(gular e)-.195 F .147(xpressions which comprise the le)-.195 F .147
(xical rules can describe an)-.195 F 3.397(yv)-.195 G .147(alid input)
-3.722 F 4.067(stream. Ho)33.336 231 R(we)-.325 E -.195(ve)-.325 G 1.857
-.52(r, t).195 H(he).52 E 4.067(yw)-.195 G .817(ill also)-4.067 F/F2 13
/Times-Italic@0 SF(accept)4.067 E F1 .817(as v)4.067 F .817
(alid input streams which are not syntatically)-.325 F -.325(va)33.336
246 S 4.146(lid. A).325 F .895(classic e)4.146 F .895
(xample is being able to count and balance pairs of nested parentheses.)
-.195 F(There is no re)33.336 261 Q(gular e)-.195 E
(xpression which can check this and reject unbalanced streams.)-.195 E
2.01(Therefore, we say that grammars are more e)33.336 282 R(xpressi)
-.195 E -.195(ve)-.325 G 5.261(,o).195 G 5.261(rm)-5.261 G 2.011(ore po)
-5.261 F 2.011(werful, than re)-.325 F(gular)-.195 E -.195(ex)33.336 297
S 4.694(pressions. One).195 F 1.444(might then ask wh)4.694 F 4.694(yi)
-.065 G 4.694(ti)-4.694 G 4.694(sp)-4.694 G 1.444
(rudent to bother with RE at all?)-4.694 F(Wh)7.943 E 4.693(yn)-.065 G
(ot)-4.693 E .709(simply describe the le)33.336 312 R .709
(xical rules \(which, after all, are often called the)-.195 F/F3 13
/Times-Bold@0 SF(micr)3.96 E(o-syntax)-.234 E F1 .71(of a)3.96 F 3.859
(language\) directly in the grammar?)33.336 327 R 3.859
(The answer is that doing so w)10.359 F 3.859(ould mak)-.13 F 7.109(et)
-.13 G(he)-7.109 E 3.482(grammar unbearably lar)33.336 342 R 3.483
(ge and inef)-.234 F 6.733(\214cient. As)-.325 F 3.483
(we shall see, the more po)6.733 F 3.483(werful the)-.325 F 1.241
(method of e)33.336 357 R 1.24(xpression, the less ef)-.195 F 1.24
(\214cient is the recognizer for it.)-.325 F 3.32 -1.04(We a)7.74 H 1.24
(re much better of)1.04 F(f)-.325 E .104
(using a more limited method \(re)33.336 372 R .104(gular e)-.195 F .104
(xpressions\) to g)-.195 F .104(ain maximum performance for that)-.065 F
(part of the parser which must react to each and e)33.336 387 Q -.195
(ve)-.325 G(ry input character).195 E(.)-.715 E F3(Context-fr)201.939
417 Q(ee grammars)-.234 E F1 .666(In order to write an ef)33.336 453 R
.666(\214cient parser)-.325 F 3.916(,t)-.52 G .665
(he grammar rules must be static, i.e. we must kno)-3.916 F(w)-.325 E
.285(them in adv)33.336 468 R .285(ance without looking at the input.)
-.325 F 3.535(Al)6.785 G .285(anguage which has dynamic syntax can)
-3.535 F .645(not be e)33.336 483 R .645(xpressed with a conte)-.195 F
.645(xt-free grammar)-.195 F 7.145(.I)-.715 G .645(magine a Perl-lik)
-7.145 F 3.895(ee)-.13 G .645(xtension to C which)-4.09 F
(supports iterating o)33.336 498 Q -.195(ve)-.195 G 3.25(ra).195 G
(rrays using the)-3.25 E/F4 13/Courier@0 SF(for)3.25 E F1 -.13(ke)3.25 G
(yw)-.065 E(ord:)-.13 E/F5 8/Courier@0 SF 1.2(int func\(\))45.936 510 S
({)45.936 522 Q 1.2(int ary[10];)81.936 534 S 1.2(for\(ary\))129.936 558
S({)129.936 570 Q 1.2(/*...*/)177.936 582 S(})129.936 594 Q(})45.936 606
Q F1 1.378(It can not be determined using syntactic analysis alone whet\
her the sequence of tok)33.336 627 R(ens)-.13 E F4 .109
(FOR, '\(', IDENT, '\)')33.336 642 R F1 .108(is v)3.359 F 3.358
(alid. In)-.325 F .108(order to parse this conte)3.358 F .108
(xt-dependent language,)-.195 F 2.926(we must write a conte)33.336 657 R
2.926(xt-free grammar which is more permissi)-.195 F -.195(ve)-.325 G
6.177(,a).195 G(llo)-6.177 E 2.927(wing incorrect)-.325 F 3.59(sentence\
s to be accepted, and then catch the error through semantic analysis \(\
type)33.336 672 R(checking\).)33.336 687 Q .359(Another classic e)33.336
708 R .359(xample of conte)-.195 F .359
(xt dependence is the inability of a conte)-.195 F .359(xt free grammar)
-.195 F 1.352(to accept e)33.336 723 R 1.352
(xpressions in which the identi\214ers must ha)-.195 F 1.742 -.195(ve p)
-.26 H(re).195 E 1.352(viously been declared.)-.325 F(The)7.852 E(te)
33.336 738 Q 1.505
(xt contains a proof of the impossibility of using conte)-.195 F 1.505
(xt-free grammar to impose this)-.195 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 3)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF(restriction.)33.336 120 Q -.195(Fo)33.336 141 S 4.286
(rt).195 G 1.036(he most part, the C language can be e)-4.286 F 1.035
(xpressed with a conte)-.195 F 1.035(xt-free grammar)-.195 F 7.535(.W)
-.715 G(e')-8.575 E(ll)-.13 E .919(see ho)33.336 156 R 4.169(wt)-.325 G
4.169(oh)-4.169 G .919(andle the fe)-4.169 F 4.169(we)-.325 G .919
(xceptions by feeding back information to modify the le)-4.364 F -.195
(xe)-.195 G(r').195 E(s)-.715 E(beha)33.336 171 Q(vior dynamically)-.26
E(.)-.845 E/F2 13/Times-Bold@0 SF(Leftmost and Rightmost deri)167.262
201 Q -.13(va)-.13 G(tions).13 E F1(Ev)33.336 237 Q .329(ery grammar ha\
s a particular start symbol which represents the entire language.)-.195
F .329(In the)6.829 F -.195(ex)33.336 252 S .624(ample abo).195 F -.195
(ve)-.195 G 3.874(,t).195 G .624(he start symbol is)-3.874 F/F3 13
/Courier@0 SF(expr)3.874 E F1 7.124(.W)C 3.874(ec)-8.164 G .624(an deri)
-3.874 F 1.014 -.195(ve a)-.325 H 1.014 -.195(ny v).195 H .624
(alid sequence of symbols)-.13 F 1.898
(\(or "sentence"\) from the start symbol by progressi)33.336 267 R -.195
(ve)-.325 G 1.898(ly replacing an).195 F 5.148(yn)-.195 G 1.898
(on-terminals by)-5.148 F 1.93
(their appropriate productions until only the terminals remain.)33.336
282 R 1.931(If the input sequence is)8.431 F F3(a+\(b-c\))33.336 297 Q
F1 3.25(,o)C(ne possible sequence of deri)-3.25 E -.325(va)-.325 G
(tion is:).325 E/F4 8/Courier@0 SF 1.2(expr)33.936 309 S 1.2
(expr + expr)33.936 321 S 1.2(IDENT + expr)33.936 333 S 1.2
(IDENT + \( expr \))33.936 345 S 1.2(IDENT + \( expr - expr \))33.936
357 S 1.2(IDENT + \( IDENT - expr \))33.936 369 S 1.2
(IDENT + \( IDENT - IDENT \))33.936 381 S F1 .278(In this deri)33.336
402 R -.325(va)-.325 G .278(tion, the leftmost non-terminal w).325 F
.278(as e)-.13 F .278(xpanded at each step.)-.195 F .277(This is kno)
6.777 F .277(wn as)-.325 F(the)33.336 417 Q F2 .619(leftmost deri)3.869
F -.13(va)-.13 G(tion).13 E F1 7.119(.W)C 3.869(ec)-8.159 G .62(ould ha)
-3.869 F 1.01 -.195(ve a)-.26 H .62(lso e).195 F .62
(xpanded the rightmost non-terminal, or in)-.195 F -.13(fa)33.336 432 S
(ct an).13 E 3.25(yn)-.195 G(on-terminal, at each step.)-3.25 E 6.2
-1.04(We s)33.336 453 T 4.12(ay that each of the abo)1.04 F 4.509 -.195
(ve s)-.195 H 4.119(teps is a).195 F F2 4.119(sentential f)7.369 F(orm)
-.325 E F1 4.119(of the input sentence.)7.369 F 1.309(De\214nition: a s\
equence of symbols \(terminals or non-terminals\) is a sentential form \
if it)33.336 468 R 1.332(can be generated by some e)33.336 483 R 1.331
(xpansion of the start symbol, and if by further e)-.195 F 1.331
(xpansion it)-.195 F(will yield a v)33.336 498 Q
(alid sentence of terminals.)-.325 E 4.157(At)33.336 519 S .907
(ree which represents a partial or complete deri)-4.157 F -.325(va)-.325
G .907(tion is kno).325 F .908(wn as a)-.325 F F2 -.13(Pa)4.158 G .908
(rse T).13 F -.234(re)-.962 G(e).234 E F1 7.408(.T)C(he)-7.408 E .57
(reader will observ)33.336 534 R 3.82(et)-.195 G .57
(hat in reading the tree from left to right across the bottom frontier)
-3.82 F 3.819(,a)-.52 G(sentential form is al)33.336 549 Q -.13(wa)-.13
G(ys seen.).13 E(The \214nal parse tree for the e)6.5 E(xample abo)-.195
E .39 -.195(ve i)-.195 H(s:).195 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 4)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E 0 0 230 230
-179 179 152.336 299 PBEGIN
%%BeginDocument: parsetree.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: parsetree.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 17 01:36:40 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 230 179
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 179 moveto 0 0 lineto 230 0 lineto 230 179 lineto closepath clip newpath
-198.0 256.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 4800 1500 m
 3975 1650 l gs col0 s gr 
% Polyline
n 4875 1500 m
 4875 1650 l gs col0 s gr 
% Polyline
n 5100 1425 m
 5925 1650 l gs col0 s gr 
% Polyline
n 3675 1950 m
 3675 2475 l gs col0 s gr 
% Polyline
n 6000 1950 m
 5475 2400 l gs col0 s gr 
% Polyline
n 6075 1950 m
 6075 2400 l gs col0 s gr 
% Polyline
n 6150 1950 m
 6750 2475 l gs col0 s gr 
% Polyline
n 6000 2775 m
 5400 3375 l gs col0 s gr 
% Polyline
n 6075 2775 m
 6075 3300 l gs col0 s gr 
% Polyline
n 6225 2775 m
 6675 3300 l gs col0 s gr 
% Polyline
n 6825 3675 m
 6825 4050 l gs col0 s gr 
% Polyline
n 5475 3675 m
 5475 4050 l gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
3525 1875 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5850 1875 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1425 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4875 1875 m
gs 1 -1 sc (+) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3300 2700 m
gs 1 -1 sc (IDENT) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5850 2700 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5325 2700 m
gs 1 -1 sc (\() col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6825 2700 m
gs 1 -1 sc (\)) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5250 3525 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6600 3525 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6075 3525 m
gs 1 -1 sc (-) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
5100 4275 m
gs 1 -1 sc (IDENT) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 4275 m
gs 1 -1 sc (IDENT) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF 3.543(Ag)33.336 326 S .293
(rammar which is)-3.543 F/F2 13/Times-Bold@0 SF(unambiguous)3.543 E F1
.293(has the property that re)3.543 F -.065(ga)-.195 G .293
(rdless of ho).065 F 3.543(wt)-.325 G .293(he deri)-3.543 F -.325(va)
-.325 G(tion).325 E -.13(wa)33.336 341 S 5.958(sp).13 G 2.708
(erformed \(leftmost, rightmost, or an)-5.958 F 5.958(yo)-.195 G 2.708
(ther w)-5.958 F 2.708(ay\) it yields the same parse tree.)-.13 F 4.855
(Furthermore, there is e)33.336 356 R 4.856
(xactly one leftmost and one rightmost deri)-.195 F -.325(va)-.325 G
4.856(tion possible.).325 F(Ambiguous grammars do not ha)33.336 371 Q
.39 -.195(ve t)-.26 H(hese properties.).195 E F2(Ambiguity)237.722 401 Q
F1 3.861(Ag)33.336 437 S .611(rammar is ambiguous if there e)-3.861 F
.611(xists a sentence of terminals which could ha)-.195 F 1.001 -.195
(ve t)-.26 H .871 -.13(wo o).195 H(r).13 E 1.391(more dif)33.336 452 R
1.392(ferent \214nal parse trees.)-.325 F 1.392(In our e)7.892 F 1.392
(xample grammar)-.195 F 4.642(,w)-.52 G 1.392(hat is the deri)-4.642 F
-.325(va)-.325 G 1.392(tion of the).325 F(sentence)33.336 467 Q/F3 13
/Courier@0 SF(a+b*c)4.027 E F1 7.277(?T)C .777(here are tw)-7.277 F
4.027(op)-.13 G .776(ossible answers.)-4.027 F .776
(Therefore, although this grammar is)7.276 F(suf)33.336 482 Q .632
(\214cient for determining v)-.325 F .632(alid vs in)-.325 F -.325(va)
-.52 G .633(lid sentences, it is not useful as part of a compiler).325 F
(because it does not capture the meaning of the sentence.)33.336 497 Q
.053(One w)33.336 518 R .053(ay to remo)-.13 F .443 -.195(ve t)-.195 H
.053(he ambiguity is to de\214ne operator precedence and associati).195
F(vity)-.325 E 6.553(.T)-.845 G(his)-6.553 E 2.987(method is often used\
 with yacc/bison parser generators, and we shall see it shortly)33.336
533 R(.)-.845 E(Ho)33.336 548 Q(we)-.325 E -.195(ve)-.325 G 1.387 -.52
(r, t).195 H .347(his mechanism is outside of).52 F .346
(the BNF notation, so let us e)6.846 F .346(xplore re-writing the)-.195
F(grammar to be unambiguous:)33.336 563 Q/F4 8/Courier@0 SF 12 1.2
(expr: expr)33.936 575 T 1.2('+' term)6 G 19.2(|e)57.936 587 S 1.2
(xpr '-' term)-18 G 19.2(|t)57.936 599 S 1.2(erm)-18 G(;)57.936 611 Q 12
1.2(term: term)33.936 635 T 1.2('*' factor)6 G 19.2(|t)57.936 647 S 1.2
(erm '/' factor)-18 G 19.2(|f)57.936 659 S 1.2(actor)-18 G(;)57.936 671
Q 1.2(factor: '\(' expr '\)')33.936 695 S 19.2(|N)57.936 707 S 1.2(UM)
-18 G 19.2(|I)57.936 719 S 1.2(DENT)-18 G(;)57.936 731 Q 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 5)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 13
/Times-Roman@0 SF 2.716 -1.04(We h)33.336 120 T -2.925 -.26(av e)1.04 H
(rede\214ned)4.146 E/F2 13/Courier@0 SF(expr)3.886 E F1 .636
(so that the rightmost non-terminal can not be something which)3.886 F
2.332(ultimately contains a + or -.)33.336 135 R 2.332(This remo)8.832 F
-.195(ve)-.195 G 5.582(st).195 G 2.332
(he ambiguity both about precedence and)-5.582 F(associati)33.336 150 Q
(vity)-.325 E 6.5(.N)-.845 G .65 -.325(ow a)-6.5 H 3.25(+b*c and).325 F
(a-b-c are unambiguous.)3.25 E/F3 13/Times-Bold@0 SF(LL / T)173.151 180
Q(op-Do)-1.196 E(wn Recursi)-.13 E .26 -.13(ve p)-.13 H(arsing).13 E F1
-.195(Fo)33.336 216 S 3.332(rc).195 G(omple)-3.332 E 3.332(xp)-.195 G
.083(rojects, parsers are generally created using a tool such as yacc.)
-3.332 F(Ho)6.583 E(we)-.325 E -.195(ve)-.325 G 1.123 -.52(r, i).195 H
(t).52 E .664(is v)33.336 231 R .664(ery useful to ha)-.195 F 1.054
-.195(ve a)-.26 H 3.914(ni).195 G(ntuiti)-3.914 E 1.054 -.195(ve f)-.325
H .664(eel for ho).195 F 3.914(wt)-.325 G 3.914(oc)-3.914 G .663
(reate parsers by hand using recursion.)-3.914 F -.195(Fo)33.336 246 S
5.234(re).195 G 1.984(xample, one might need to construct a small parse\
r in a language which doesn')-5.429 F(t)-.234 E -.13(wo)33.336 261 S
(rk with yacc/bison.).13 E 2.944(In implementing recursi)33.336 282 R
3.334 -.195(ve d)-.325 H 2.944
(escent parsing, we will write a program structure which).195 F
(mirrors the grammar)33.336 297 Q 6.5(.L)-.715 G
(et us say our grammar is just:)-6.5 E/F4 8/Courier@0 SF 12 1.2
(expr: '\(')33.936 309 T 1.2(expr '\)')6 G 31.2(|N)45.936 321 S 1.2(UM)
-30 G 31.2(|I)45.936 333 S 1.2(DENT)-30 G(;)45.936 345 Q F1
(Our parser could be:)33.336 366 Q F4 1.2(int curtok;)33.936 378 S 1.2
(expr\(\))33.936 402 S({)33.936 414 Q 1.2
(if \(\(curtok=yylex\(\)\)=='\('\))81.936 426 S({)81.936 438 Q 1.2
(if \(!expr\(\)\) return 0;)129.936 450 S 1.2
(if \(yylex\(\)!='\)'\) return 0;)129.936 462 S 1.2(return 1;)129.936
474 S(})81.936 486 Q 1.2
(if \(curtok == IDENT || curtok == NUM\) return 1;)81.936 498 S 1.2
(return 0;)81.936 510 S(})33.936 522 Q F1 5.436 -1.04(We r)33.336 543 T
3.356(eturn 1 if the input is v)1.04 F 3.357
(alid according to the grammar)-.325 F 6.607(,a)-.52 G 3.357
(nd 0 otherwise.)-6.607 F(The)9.857 E 5.935(recursion must e)33.336 558
R -.195(ve)-.325 G 5.935(ntually terminate.).195 F(Ho)12.435 E(we)-.325
E -.195(ve)-.325 G 6.975 -.52(r, t).195 H 5.934
(ry applying this method to the).52 F 1.04(unambiguous e)33.336 573 R
1.04(xpression grammar abo)-.195 F -.195(ve)-.195 G 7.54(.W).195 G 4.29
(ew)-8.58 G 1.04(ill quickly get into an endless recursion)-4.29 F 1.675
(because of the w)33.336 588 R 1.675(ay the rules are written.)-.13 F
(The)8.174 E 4.924(ya)-.195 G(re)-4.924 E F3 1.674(left r)4.924 F
(ecursi)-.234 E -.13(ve)-.13 G F1 8.174(.T).13 G 4.924(oc)-9.214 G 1.674
(orrect this, we)-4.924 F(must re-write the grammar)33.336 603 Q(.)-.715
E F4 12 1.2(expr: term)33.936 615 T 25.2(|t)51.936 627 S 1.2
(erm '+' expr)-24 G 25.2(|t)51.936 639 S 1.2(erm '-' expr)-24 G(;)51.936
651 Q 12 1.2(term: factor)33.936 675 T 25.2(|f)51.936 687 S 1.2
(actor '*' term)-24 G 25.2(|f)51.936 699 S 1.2(actor '/' term)-24 G(;)
51.936 711 Q 1.2(factor: '\(' expr '\)')33.936 735 S 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 6)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 8
/Courier@0 SF 19.2(|N)57.936 117 S 1.2(UM)-18 G 19.2(|I)57.936 129 S 1.2
(DENT)-18 G(;)57.936 141 Q/F2 13/Times-Roman@0 SF 3.919(Ag)33.336 162 S
.669(rammar which has no left recursion and which can be parsed by e)
-3.919 F .669(xamining the input)-.195 F 1.683
(stream from left to right and taking the leftmost deri)33.336 177 R
-.325(va)-.325 G 1.682(tion, looking at most one tok).325 F(en)-.13 E
(ahead is called LL\(1\).)33.336 192 Q(From this grammar)6.5 E 3.25(,w)
-.52 G 3.25(ec)-3.25 G(an write a top-do)-3.25 E(wn parser:)-.325 E F1
1.2(main\(\))33.936 204 S({)33.936 216 Q 1.2(curtok=yylex\(\);)81.936
228 S 1.2(if \(expr\(\)\))81.936 240 S 1.2(printf\("GOOD\\n"\))129.936
252 S 1.2(else)81.936 264 S 1.2(printf\("BAD\\n"\);)129.936 276 S(})
33.936 288 Q 1.2(expr\(\))33.936 312 S({)33.936 324 Q 1.2
(if \(!term\(\)\) return 0;)81.936 336 S({)81.936 348 Q 1.2
(if \(curtok=='+'\))81.936 360 S({)81.936 372 Q 1.2(curtok=yylex\(\);)
129.936 384 S 1.2(if \(!expr\(\)\) return 0;)129.936 396 S 1.2
(return 1;)129.936 408 S(})81.936 420 Q 1.2(if \(curtok=='-'\))81.936
432 S({)81.936 444 Q 1.2(curtok=yylex\(\);)129.936 456 S 1.2
(if \(!expr\(\)\) return 0;)129.936 468 S 1.2(return 1;)129.936 480 S(})
81.936 492 Q 1.2(return 1;)81.936 504 S(})33.936 516 Q 1.2(term\(\))
33.936 540 S({)33.936 552 Q 1.2(if \(!factor\(&v1\)\) return 0;)81.936
564 S 1.2(if \(curtok == '*'\))81.936 576 S({)81.936 588 Q 1.2
(curtok=yylex\(\);)129.936 600 S 1.2(if \(!term\(\)\) return 0;)129.936
612 S 1.2(return 1;)129.936 624 S(})81.936 636 Q 1.2
(if \(curtok == '/'\))81.936 648 S({)81.936 660 Q 1.2(curtok=yylex\(\);)
129.936 672 S 1.2(if \(!term\(\)\) return 0;)129.936 684 S 1.2
(return 1;)129.936 696 S(})81.936 708 Q 1.2(return 1;)81.936 720 S(})
33.936 732 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 7)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 8
/Courier@0 SF 1.2(factor\(\))33.936 117 S({)33.936 129 Q 1.2
(if \(curtok=='\('\))81.936 141 S({)81.936 153 Q 1.2(curtok=yylex\(\);)
129.936 165 S 1.2(if \(!expr\(v\)\) return 0;)129.936 177 S 1.2
(if \(curtok!='\)'\) return 0;)129.936 189 S 1.2(curtok=yylex\(\);)
129.936 201 S 1.2(return 1;)129.936 213 S(})81.936 225 Q 1.2
(if \(curtok==NUM || curtok==IDENT\))81.936 237 S({)81.936 249 Q 1.2
(curtok=yylex\(\);)129.936 261 S 1.2(return 1;)129.936 273 S(})81.936
285 Q 1.2(return 0;)81.936 297 S(})33.936 309 Q/F2 13/Times-Roman@0 SF
4.358 -1.04(We s)33.336 330 T 2.278(ee that the structure of the abo)
1.04 F 2.668 -.195(ve r)-.195 H(ecursi).195 E 2.668 -.195(ve p)-.325 H
2.278(arser is that on entry to an).195 F 5.528(yo)-.195 G 5.529(ft)
-5.528 G(he)-5.529 E 4.584(functions, we are "looking for" an e)33.336
345 R 4.583(xpansion of a non-terminal symbol with the)-.195 F 3.447
(corresponding name, and)33.336 360 R/F3 13/Courier@0 SF(curtok)6.697 E
F2 3.447(contains the current tok)6.697 F 6.698(en. If)-.13 F 3.448
(the grammar rule)6.698 F .884
(contains a non-terminal, we recurse using that name.)33.336 375 R .884
(If the rule contains a terminal, we)7.384 F .533
(check to see if it matches.)33.336 390 R .534
(If it does not match, we \215ag an error)7.033 F 7.034(.I)-.715 G 3.784
(fw)-7.034 G 3.784(ed)-3.784 G 3.784(oh)-3.784 G -2.925 -.26(av e)-3.784
H 3.784(am)4.044 G(atch,)-3.784 E 1.76(then we must consume the tok)
33.336 405 R 1.759(en with)-.13 F F3(curtok=yylex\(\))5.009 E F2 8.259
(.\()C 1.759(perhaps we w)-8.259 F 1.759(ould use a)-.13 F .592
(macro since this comes up so frequently\).)33.336 420 R .593
(Thus we are using a look-ahead of one tok)7.093 F(en.)-.13 E 1.387
(Upon return from an)33.336 435 R 4.637(yf)-.195 G(unction,)-4.637 E F3
(curtok)4.637 E F2 1.386(is e)4.636 F 1.386(xpected to contain the)-.195
F/F4 13/Times-Italic@0 SF(ne)4.636 E(xt)-.26 E F2(tok)4.636 E 1.386
(en \(i.e. not)-.13 F(an)33.336 450 Q 3.25(yo)-.195 G 3.25(ft)-3.25 G
(he tok)-3.25 E(ens associated with the deri)-.13 E -.325(va)-.325 G
(tion of that function which just returned\).).325 E 2.907(One problem \
which comes to light is that because we started with a right-recursi)
33.336 471 R -.195(ve)-.325 G(grammar)33.336 486 Q 3.422(,o)-.52 G .172
(ur parser has right associati)-3.422 F(vity)-.325 E 6.672(.T)-.845 G
.172(his means we b)-6.672 F .171(uild the wrong parse tree for)-.26 F
.787(an e)33.336 501 R .787(xpression lik)-.195 F 4.037(ea)-.13 G 4.037
(-b-c. It)-4.037 F(doesn')4.037 E 4.037(tm)-.234 G .787(atter in the e)
-4.037 F .788(xample abo)-.195 F -.195(ve)-.195 G 4.038(,b).195 G .788
(ecause we are neither)-4.038 F 2.518
(compiling nor interpreting the code, just v)33.336 516 R 2.518
(erifying it for syntax.)-.195 F(Let')9.018 E 5.768(sd)-.715 G 5.768(ot)
-5.768 G 2.518(his parser)-5.768 F(ag)33.336 531 Q
(ain, this time adding support for calculating the v)-.065 E
(alue of the e)-.325 E(xpression:)-.195 E F1 1.2(#include <stdio.h>)
33.936 543 S 1.2(#include "tokval.h")33.936 555 S 1.2
(int curtok,yylval;)33.936 579 S 1.2(main\(\))33.936 603 S({)33.936 615
Q 1.2(int val,rc;)39.936 627 S 1.2(curtok=yylex\(\);)81.936 639 S 1.2
(rc=expr\(&val\);)81.936 651 S 1.2(printf\("%d\\n",val\);)81.936 663 S
1.2(if \(rc\) printf\("GOOD\\n"\); else printf\("BAD\\n"\);)81.936 675 S
(})33.936 687 Q 1.2(expr\(int *v\))33.936 711 S({)33.936 723 Q 1.2
(int v1,v2,op;)39.936 735 S 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 8)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 8
/Courier@0 SF 1.2(if \(!term\(&v1\)\) return 0;)81.936 117 S 1.2
(while \(curtok=='+' || curtok=='-'\))81.936 129 S({)81.936 141 Q 1.2
(op=curtok;)129.936 153 S 1.2(curtok=yylex\(\);)129.936 165 S 1.2
(if \(!term\(&v2\)\) return 0;)129.936 177 S 1.2
(if \(op=='+'\) v1+=v2; else v1-=v2;)129.936 189 S(})81.936 201 Q 1.2
(*v=v1;)81.936 213 S 1.2(return 1;)81.936 225 S(})33.936 237 Q 1.2
(term\(int *v\))33.936 261 S({)33.936 273 Q 1.2(int v1,v2,op;)39.936 285
S 1.2(if \(!factor\(&v1\)\) return 0;)81.936 297 S 1.2
(while \(curtok=='*' || curtok=='/'\))81.936 309 S({)81.936 321 Q 1.2
(op=curtok;)129.936 333 S 1.2(curtok=yylex\(\);)129.936 345 S 1.2
(if \(!factor\(&v2\)\) return 0;)129.936 357 S 1.2(if \(op=='*'\))
129.936 369 S 1.2(v1*=v2;)177.936 381 S 1.2(else)129.936 393 S({)129.936
405 Q 1.2(if \(v2==0\))177.936 417 S({)177.936 429 Q 1.2
(fprintf\(stderr,"/0 error\\n"\);)225.936 441 S 1.2(return 0;)225.936
453 S(})177.936 465 Q 1.2(v1/=v2;)177.936 477 S(})129.936 489 Q(})81.936
501 Q 1.2(*v=v1;)81.936 513 S 1.2(return 1;)81.936 525 S(})33.936 537 Q
1.2(factor\(int *v\))33.936 561 S({)33.936 573 Q 1.2
(if \(curtok=='\('\))81.936 585 S({)81.936 597 Q 1.2(curtok=yylex\(\);)
129.936 609 S 1.2(if \(!expr\(v\)\) return 0;)129.936 621 S 1.2
(if \(curtok!='\)'\) return 0;)129.936 633 S 1.2(curtok=yylex\(\);)
129.936 645 S 1.2(return 1;)129.936 657 S(})81.936 669 Q 1.2
(/* Let's drop support for IDENT for now because we haven't)81.936 681 S
1.2(developed a symbol table yet */)129.936 693 S 1.2
(if \(curtok==NUM\))81.936 705 S({)81.936 717 Q 1.2(*v=yylval;)129.936
729 S 1.2(curtok=yylex\(\);)129.936 741 S 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 140.742(ECE466:Compilers Unit)33.336 60 R(2/pg 9)
2.25 E(\2512008 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25 E/F1 8
/Courier@0 SF 1.2(return 1;)129.936 117 S(})81.936 129 Q 1.2
(if \(curtok==EOF\))81.936 141 S({)81.936 153 Q 1.2
(fprintf\(stderr,"found EOF in factor\\n"\);)129.936 165 S 1.2
(return 1;)129.936 177 S(})81.936 189 Q 1.2
(fprintf\(stderr,"found bad token %d in factor\\n",curtok\);)81.936 201
S 1.2(return 0;)81.936 213 S(})33.936 225 Q/F2 13/Times-Roman@0 SF .542
(This is still a top-do)33.336 246 R .542(wn recursi)-.325 F .932 -.195
(ve d)-.325 H .542(escent parser).195 F 3.792(,b)-.52 G .542(ut we ha)
-4.052 F .933 -.195(ve r)-.26 H .543(eplaced tail recursion with).195 F
3.25(aw)33.336 261 S(hile loop.)-3.25 E(Doing so mak)6.5 E
(es it easy to e)-.13 E(xpress a syntax lik)-.195 E(e:)-.13 E/F3 10
/Courier@0 SF(list: elem { '+' elem}*)33.336 273 Q F2 1.406
(Of course, this w)33.336 288 R 1.406(ay of e)-.13 F 1.406
(xpressing syntax does not conform to the rules which we ha)-.195 F
-.195(ve)-.26 G 2.048
(already stated, i.e. it is not a form of BNF grammar)33.336 303 R 8.549
(.W)-.715 G 2.049(riting a list this w)-8.549 F 2.049(ay is more)-.13 F
(intuiti)33.336 318 Q 4.513 -.195(ve a)-.325 H 4.122
(nd this notation is sometimes used informally).195 F 10.622(.H)-.845 G
-.325(ow)-10.622 G -2.795 -.325(ev e).325 H 5.162 -.52(r, l).325 H 4.122
(ists in formal).52 F
(grammars are written using either left or right recursion.)33.336 333 Q
/F4 13/Times-Bold@0 SF(LR / Bottom-Up P)199.333 363 Q(arsing)-.13 E F2
.775(Whereas top-do)33.336 399 R .775
(wn parsing starts with the highest-le)-.325 F -.195(ve)-.325 G 4.026
(ln).195 G .776(ode and attempts to w)-4.026 F .776(ork do)-.13 F(wn)
-.325 E .005(to the terminals, bottom-up parsing consumes terminals and\
, as it recognizes sequences of)33.336 414 R 1.721(terminals which coul\
d be the right-hand-side of a production, replaces them with non-)33.336
429 R 4.809(terminals. This)33.336 444 R 1.559
(process continues, replacing sequences of symbols \(both terminals and)
4.809 F 3.584(non-terminals\) with higher)33.336 459 R(-le)-.26 E -.195
(ve)-.325 G 6.834(ln).195 G 3.584
(on-terminals, until the input is consumed and the)-6.834 F(highest-le)
33.336 474 Q -.195(ve)-.325 G 3.25(lt).195 G
(erminal has been recognized.)-3.25 E(Recalling our original e)6.5 E
(xpression grammar:)-.195 E F3 21.6(expr: IDENT)33.336 486 R(|NUM)90.936
498 Q 6(|')90.936 510 S(\(' expr '\)')-6 E 6(|e)90.936 522 S
(xpr '+' expr)-6 E 6(|e)90.936 534 S(xpr '-' expr)-6 E 6(|e)90.936 546 S
(xpr '*' expr)-6 E 6(|e)90.936 558 S(xpr '/' expr)-6 E(;)90.936 570 Q F2
.549(Consider the input sequence)33.336 591 R/F5 13/Courier@0 SF
(a+\(b-c\))3.799 E F2 .548(where, as before, a, b, and c are all IDENT)
3.799 F 7.048(.T)-.962 G(he)-7.048 E(sequence of mo)33.336 606 Q -.195
(ve)-.195 G 3.25(sm).195 G(ade during bottom-up parsing is:)-3.25 E F3
142.8(MOVE Symbol)33.336 618 R(stack after move)6 E 106.8
(---------- ----------------------------------------)33.336 630 R 136.8
(SHIFT IDENT)33.336 642 R 130.8(REDUCE expr)33.336 654 R 136.8
(SHIFT expr)33.336 666 R(+)6 E 136.8(SHIFT expr)33.336 678 R 6(+\()6 G
136.8(SHIFT expr)33.336 690 R 6(+\(I)6 G(DENT)-6 E 130.8(REDUCE expr)
33.336 702 R 6(+\(e)6 G(xpr)-6 E 136.8(SHIFT expr)33.336 714 R 6(+\(e)6
G(xpr -)-6 E 136.8(SHIFT expr)33.336 726 R 6(+\(e)6 G(xpr - expr)-6 E
130.8(REDUCE expr)33.336 738 R 6(+\(e)6 G(xpr)-6 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 10)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 136.8(SHIFT expr)33.336 117 R 6(+\(e)6 G(xpr \))-6 E
130.8(REDUCE expr)33.336 129 R 6(+e)6 G(xpr)-6 E 130.8(REDUCE expr)
33.336 141 R 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 11)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 2.08 -1.04(We c)33.336 120 T
(an informally describe the bottom-up "shift-reduce" parsing method as:)
1.04 E/F2 10/Courier@0 SF(while \(there are still input tokens\))90.936
132 Q(shift a token onto a stack of symbols)148.536 144 Q
(while \(the top N symbols represent "best" rhs of a production\))
148.536 156 Q(replace the top N symbols with the lhs symbol)206.136 168
Q F1 .366(An error occurs if the result of this process, when all input\
 has been consumed, is not the)33.336 189 R .354
(goal symbol which represents the entirety of the language \()33.336 204
R/F3 13/Courier@0 SF .354(expr in our example)B F1(\).)A .695(Bottom-up\
 parsing is called LR parsing because it consumes the input from left-t\
o-right,)33.336 219 R 3.049(and b)33.336 234 R 3.049(uilds the deri)-.26
F -.325(va)-.325 G 3.048(tion from right-to-left \(whereas LL parsing b)
.325 F 3.048(uilds left-to-right\).)-.26 F 2.478(Determining whether th\
e stack has the "best" rule to match, or whether more tok)33.336 249 R
(ens)-.13 E(should be shifted, is the "hard part".)33.336 264 Q/F4 13
/Times-Bold@0 SF(Grammar P)220.061 294 Q -.13(ow)-.26 G(er).13 E F1
2.804 -1.04(We s)33.336 330 T .724(ay that a grammar is LR\(1\) if it c\
an be processed by LR parsing, using at most one)1.04 F(tok)33.336 345 Q
.594(en of look-ahead.)-.13 F .594(An LR\(2\) grammar requires tw)7.094
F 3.844(ot)-.13 G(ok)-3.844 E .594(ens of look-ahead.)-.13 F .594
(Here is an)10.344 F -.195(ex)33.336 360 S
(ample of LR\(2\) lifted from the O'Reilly book:).195 E F2
(stmt: COMMAND opt_keyword '\(' IDENT '\)')33.336 372 Q(;)90.936 384 Q
37.2(opt_keyword: /*empty*/)33.336 408 R 6(|')90.936 420 S
(\(' KEYWORD '\)')-6 E(;)81.336 432 Q F1(Ha)33.336 453 Q 1.165
(ving seen just COMMAND '\(', it is ambiguous whether we ha)-.26 F 1.554
-.195(ve j)-.26 H 1.164(ust seen an empty).195 F(opt_k)33.336 468 Q
-.195(ey)-.13 G -.13(wo).195 G 5.267(rd and should no).13 F 8.517(wb)
-.325 G 8.517(ee)-8.517 G 5.267(xpecting an IDENT)-8.712 F 8.517(,o)
-.962 G 8.517(rw)-8.517 G 8.517(ea)-8.517 G 5.267(re about to see)-8.517
F(KEYW)33.336 483 Q 3.549(ORD. As)-.13 F(we')3.548 E .298(ll see belo)
-.13 F 1.988 -.845(w, y)-.325 H .298(acc or bison w).845 F .298
(ould call this a shift/reduce con\215ict.)-.13 F(If)6.798 E .345
(we could look ahead one more tok)33.336 498 R .346
(en, then we could decide this positi)-.13 F -.195(ve)-.325 G(ly).195 E
6.846(.T)-.845 G .346(herefore the)-6.846 F(grammar is LR\(2\).)33.336
513 Q .835(It can be sho)33.336 534 R .835(wn that an)-.325 F 4.085(yL)
-.195 G .835(R\(n\) grammar)-4.085 F 4.085(,n)-.52 G .834
(>1, can be re-written to be LR\(1\).)-4.085 F(Ho)7.334 E(we)-.325 E
-.195(ve)-.325 G -.52(r,).195 G 2.508(the resulting grammar may be more\
 cumbersome, or may not be able to capture the)33.336 549 R
(meaning of the syntax as ef)33.336 564 Q(fecti)-.325 E -.195(ve)-.325 G
(ly).195 E 6.5(.W)-.845 G 3.25(ec)-7.54 G(an re-write the abo)-3.25 E
.39 -.195(ve t)-.195 H(o:).195 E F2
(stmt: COMMAND '\(' KEYWORD '\)' '\(' IDENT \)'')33.336 576 Q 18(|C)
45.336 588 S(OMMAND '\(' IDENT '\)')-18 E(;)45.336 600 Q F1 .601
(LR grammars are more po)33.336 621 R .601
(werful than LL grammars, in that the)-.325 F 3.85(yc)-.195 G .6(an e)
-3.85 F .6(xpress a lar)-.195 F .6(ger set)-.234 F 1.435(of languages.)
33.336 636 R 1.435(All LL grammars are LR, b)7.935 F 1.435
(ut not all LR grammars are LL.)-.26 F 1.436(LR\(n\), n>1)7.936 F .307
(grammars are more e)33.336 651 R(xpressi)-.195 E .697 -.195(ve t)-.325
H .307(han LR\(1\), b).195 F .307(ut the)-.26 F 3.557(yd)-.195 G 3.557
(on)-3.557 G .307(ot describe more languages, the)-3.557 F(y)-.195 E
(merely describe them more intuiti)33.336 666 Q -.195(ve)-.325 G(ly).195
E(.)-.845 E -1.3(Ya)33.336 687 S 1.323(cc and Bison generate parsers wh\
ich can only handle LR\(1\) grammars, and in f)1.3 F 1.324(act a)-.13 F
2.266(subset of LR\(1\) kno)33.336 702 R 2.265
(wn as LALR\(1\), discussed directly belo)-.325 F 7.205 -.845(w. B)-.325
H 2.265(ison has support for).845 F .378
(generating a parser which can use an LR\(n\) grammar)33.336 717 R 3.628
(,w)-.52 G .378(here n is unbounded, also kno)-3.628 F(wn)-.325 E .98
(as Generalized LR \(GLR\) parsing.)33.336 732 R .98
(GLR grammars are the most e)7.48 F(xpressi)-.195 E 1.369 -.195(ve c)
-.325 H(onte).195 E(xt-free)-.195 E 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 12)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 3.607(grammars. Ho)33.336 120 R(we)-.325 E -.195(ve)
-.325 G 1.398 -.52(r, t).195 H .358(here is a big price to pay).52 F
6.858(.W)-.845 G .358(hen using a GLR grammar)-6.858 F 3.608(,t)-.52 G
.358(he parser)-3.608 F 2.493(may ha)33.336 135 R 2.883 -.195(ve t)-.26
H 5.743(ob).195 G 2.493(acktrack, i.e. it may shift a number of termina\
ls only to realize it has)-5.743 F .676(reached a dead-end, and then it\
 must push those terminals back and try another solution.)33.336 150 R
1.196(As we g)33.336 165 R 1.195(ain more f)-.065 F 1.195
(amiliarity with the interactions between the parser and the le)-.13 F
-.195(xe)-.195 G 2.235 -.52(r, a).195 H(nd).52 E 5.055
(with embedded actions, it will become clear wh)33.336 180 R 8.305(yab)
-.065 G 5.055(acktracking parser is v)-8.305 F(ery)-.195 E(cumbersome.)
33.336 195 Q/F2 13/Times-Bold@0 SF(LALR\(1\) parser operation)193.678
225 Q F1 3.923(Most real-w)33.336 261 R 3.922
(orld programming languages can be adequately parsed using a parsing)
-.13 F .051(technique kno)33.336 276 R .051(wn as LALR\(1\).)-.325 F
3.301(Ag)6.551 G .051
(rammar which is said to be LALR\(1\) is one which can)-3.301 F
(be parsed by this method, the essentials of which are:)33.336 291 Q
3.25<8354>33.336 306 S(he LALR\(1\) parser is a DF)-3.25 E(A.)-.962 E
3.25<8345>33.336 321 S
(ach of the states represents one or more LR\(1\) items)-3.25 E 6.145
<8341>33.336 336 S 6.145(nL)-6.145 G 2.895(R\(1\) item consists of thre\
e things: \(1\) a grammar rule, \(2\) a "cursor" which)-6.145 F .165
(represents ho)33.336 351 R 3.415(wm)-.325 G .165
(uch of that rule we ha)-3.415 F .556 -.195(ve a)-.26 H .166
(lready seen, \(3\) one or more lookahead tok).195 F(ens)-.13 E
(to match ag)33.336 366 Q(ainst.)-.065 E 6.503<8341>33.336 381 S 3.252
(ll symbols, both terminals and non-terminals, are represented by inte)
-6.503 F 3.252(ger symbol)-.195 F(numbers.)33.336 396 Q 3.25<8341>33.336
411 S(ll states are represented by inte)-3.25 E(ger state numbers.)-.195
E 5.214<8341>33.336 426 S 1.964(ll rules are represented by inte)-5.214
F 1.964(ger rule numbers.)-.195 F 1.964(When a non-terminal has se)8.464
F -.195(ve)-.325 G(ral).195 E(possible rules, each is gi)33.336 441 Q
-.195(ve)-.325 G 3.25(nad).195 G(istinct rule number)-3.25 E(.)-.715 E
3.536<8354>33.336 456 S .285(he parser maintains a stack of state numbe\
rs, with the top of the stack representing the)-3.536 F
(current state number)33.336 471 Q 6.5(.T)-.715 G
(his stack is initialized by pushing state #0.)-6.5 E 5.768<8354>33.336
486 S 2.519
(here is a one-to-one correspondence between states and symbols.)-5.768
F 2.519(The state stack)9.019 F 1.767(therefore can also be vie)33.336
501 R 1.766(wed as a symbol stack.)-.325 F(Ho)8.266 E(we)-.325 E -.195
(ve)-.325 G 2.806 -.52(r, t).195 H 1.766(here is no e).52 F 1.766
(xplicit symbol)-.195 F(stack in the LALR parser)33.336 516 Q(.)-.715 E
4.747<8354>33.336 531 S 1.497(here are tw)-4.747 F 4.747(ob)-.13 G 1.498
(asic tables which are created by the parser generator \(yacc or bison\
\).)-4.747 F .109(The A)33.336 546 R .109
(CTION table describes the action to tak)-.52 F 3.358(ea)-.13 G .108
(fter consuming a tok)-3.358 F .108(en from the le)-.13 F -.195(xe)-.195
G 4.788 -.715(r. I).195 H(t).715 E .456(is inde)33.336 561 R -.195(xe)
-.195 G 3.706(db).195 G 3.707(yt)-3.706 G(ok)-3.707 E .457
(en number and state number)-.13 F 6.957(.T)-.715 G .457(he GO)-6.957 F
.925 -.234(TO t)-.52 H .457(able determines what state to).234 F .177
(enter when a prior state is returned to during a reduction action.)
33.336 576 R .176(It is inde)6.676 F -.195(xe)-.195 G 3.426(db).195 G
3.426(yt)-3.426 G .176(he prior)-3.426 F 1.453
(state number and the rule number)33.336 591 R 7.953(.E)-.715 G(qui)
-7.953 E -.325(va)-.325 G(lently).325 E 4.703(,s)-.845 G 1.453
(ince each rule is associated with just)-4.703 F 1.817
(one left-hand-side non-terminal, we can think of the GO)33.336 606 R
2.285 -.234(TO t)-.52 H 1.817(able as being inde).234 F -.195(xe)-.195 G
5.067(db).195 G(y)-5.067 E(state number and symbol.)33.336 621 Q 3.25
<8354>33.336 636 S(he LALR algorithm as implemented by Bison/Y)-3.25 E
(acc follo)-1.3 E(ws, in pseudo-code:)-.325 E 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 13)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(yyparse\(\))33.336 117 Q({)33.336 129 Q(initialize:)
45.336 141 Q(push state 0;)90.936 153 Q(current_state=0;)90.936 165 Q
(token=yylex\(\);)90.936 177 Q(for\(;;\))90.936 189 Q({)90.936 201 Q
(action=ACTION_TABLE[current_state][token];)148.536 213 Q
(switch\(action\))148.536 225 Q({)148.536 237 Q(case ERROR:)154.536 249
Q(yyerror\(descriptive error message\);)206.136 261 Q(return 0;)206.136
273 Q(case ACCEPT:)154.536 285 Q(return 1;)206.136 297 Q
(case SHIFT\(new_state\):)154.536 309 Q(push new_state;)206.136 321 Q
(current_state=new_state;)206.136 333 Q(token=yylex\(\);)206.136 345 Q
(/**** SEMANTIC VALUE HANDLING ***/)206.136 357 Q
(push yylval on the semantic value stack)206.136 369 Q(break;)206.136
381 Q(case REDUCE\(rule_num\):)154.536 393 Q 34.8
(nrhs=LENGTH[rule_num]; //how)206.136 405 R(many symbols RHS of rule)6 E
(pop nrhs states from the stack)206.136 417 Q
(exposed_state=new top of stack)206.136 429 Q
(new_state=GOTO[exposed_state][rule])206.136 441 Q(push new_state)
206.136 453 Q(current_state=new_state)206.136 465 Q
(/**** SEMANTIC VALUE HANDLING ***/)206.136 477 Q
(execute the embedded semantic action C code)206.136 489 Q
(associated with this rule.)218.136 501 Q
(pop nrhs values from the value stack and replace)206.136 513 Q
(with the new value computed in the embedded code.)218.136 525 Q(})
148.536 537 Q(})90.936 549 Q(})33.336 561 Q/F2 13/Times-Roman@0 SF 4.782
<8354>33.336 597 S 1.532(he ERR)-4.782 F 1.532
(OR action means that there is no may to mak)-.52 F 4.783(ef)-.13 G
1.533(urther progress to)-4.783 F -.13(wa)-.325 G 1.533(rds the).13 F
.425(goal symbole.)33.336 612 R .425(The def)6.925 F .425
(ault action is to report the error and halt \(return from yyparse\).)
-.13 F(In)6.924 E 3.25(al)33.336 627 S(ater unit we')-3.25 E(ll see ho)
-.13 E 3.25(wt)-.325 G 3.25(om)-3.25 G(odify this action to allo)-3.25 E
3.25(we)-.325 G(rror reco)-3.25 E -.195(ve)-.195 G(ry).195 E(.)-.845 E
4.59<8354>33.336 642 S 1.34(he A)-4.59 F 1.341(CCEPT action occurs when\
 the parser is in state 0 and the look-ahead tok)-.52 F 1.341(en is)-.13
F/F3 13/Courier@0 SF($end)33.336 657 Q F2 3.25(,t)C(he end of input.)
-3.25 E/F4 13/Times-Bold@0 SF(Canonical LR\(1\) vs LALR\(1\))186.268 687
Q F2 1.204(The LALR\(1\) method is a re\214nement of what the te)33.336
723 R 1.204(xt calls "Canonical LR\(1\) parsing.")-.195 F .998
(The latter produces a lar)33.336 738 R .998(ge number of states and v)
-.234 F .998(ery lar)-.195 F .998(ge A)-.234 F .999(CTION and GO)-.52 F
1.467 -.234(TO t)-.52 H(ables.).234 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 14)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.126
(LALR combines states which share certain properties.)33.336 120 R -1.04
(We)7.626 G -.13('l)1.04 G 4.376(ls).13 G 1.126
(ee later that in some rare)-4.376 F
(cases, this causes a problem and a grammar can be LR\(1\) b)33.336 135
Q(ut f)-.26 E(ail to be LALR\(1\).)-.13 E/F2 13/Times-Bold@0 SF
(Running Bison)225.97 165 Q F1 1.173(Let us use the follo)33.336 201 R
1.173(wing simple grammar and see what bison does with it, by using the)
-.325 F/F3 13/Courier@0 SF(-v)33.336 216 Q F1(option and e)3.25 E
(xamining the .output \214le:)-.195 E/F4 10/Courier@0 SF(%token NUM)
33.336 228 Q(%%)33.336 240 Q 12(expr: '\(')33.336 252 R(expr '\)')6 E 6
(|N)81.336 264 S(UM)-6 E 6(|N)81.336 276 S(UM '+' NUM)-6 E(;)81.336 288
Q(%%)33.336 300 Q F1 .88(Bison internalizes the rules, gi)33.336 321 R
.879(ving them a number and adding a rule 0 which represents)-.325 F
(the entire language:)33.336 336 Q F4 6(0$)57.336 348 S
(accept: expr $end)-6 E 6(1e)57.336 372 S(xpr: '\(' expr '\)')-6 E 30
(2|)57.336 384 S(NUM)-24 E 30(3|)57.336 396 S(NUM '+' NUM)-24 E F1 3.862
-1.04(We w)33.336 417 T 1.782(ill use bison')1.04 F 5.032(sn)-.715 G
1.783(otation of a . character to represent the cursor which tracks ho)
-5.032 F(w)-.325 E .728(much of a gi)33.336 432 R -.195(ve)-.325 G 3.978
(nr).195 G .727(ule we ha)-3.978 F 1.117 -.195(ve a)-.26 H .727
(lready consumed.).195 F .727(In the initial state 0, we ha)7.227 F
1.117 -.195(ve n)-.26 H .727(ot seen).195 F(an)33.336 447 Q 3.25(yi)
-.195 G 3.25(nput. Therefore:)-3.25 F F4(state 0)33.336 459 Q 6(0$)
57.336 483 S(accept: . expr $end)-6 E 6(NUM shift,)57.336 507 R
(and go to state 1)6 E 6('\(' shift,)57.336 519 R(and go to state 2)6 E
6(expr go)57.336 543 R(to state 3)6 E F1 .529(The line after "state 0" \
tells us the place \(or places\) we could possibly be in.)33.336 564 R
.53(Here, there)7.03 F 1.525(is only one possible place, before the be)
33.336 579 R 1.525(ginning of the top-le)-.195 F -.195(ve)-.325 G 4.774
(ls).195 G 4.774(ymbol. This)-4.774 F 1.524(place is)4.774 F 2.206
(associated with rule #0.)33.336 594 R 2.207(Had the)8.707 F F3
(--report=all)5.457 E F1 2.207(option been gi)5.457 F -.195(ve)-.325 G
2.207(n, the output \214le).195 F -.13(wo)33.336 609 S
(udl list all possible places we could be, including deri).13 E -.195
(ve)-.325 G 3.25(dp).195 G(laces:)-3.25 E F4(state 0)33.336 621 Q 6(0$)
57.336 645 S(accept: . expr $end)-6 E 6(1e)57.336 657 S
(xpr: . '\(' expr '\)')-6 E 30(2|)57.336 669 S 6(.N)-24 G(UM)-6 E 30(3|)
57.336 681 S 6(.N)-24 G(UM '+' NUM)-6 E 6(NUM shift,)57.336 705 R
(and go to state 1)6 E 6('\(' shift,)57.336 717 R(and go to state 2)6 E
6(expr go)57.336 741 R(to state 3)6 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 15)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .618(This is the dif)33.336 120 R .617
(ference between what is kno)-.325 F .617
(wn in LR parser theory as the entire set of LR)-.325 F .645
(items vs just the k)33.336 135 R 3.895(ernel. It)-.13 F .645
(is a property of LALR\(1\) parsers that each state is associated)3.895
F(uniquely with a particular set of k)33.336 150 Q(ernel items.)-.13 E
1.885(After the blank line, the ne)33.336 171 R 1.885
(xt group of lines gi)-.195 F 2.275 -.195(ve t)-.325 H 1.885
(he possible actions for tok).195 F 5.135(ens. If)-.13 F(a)5.135 E(tok)
33.336 186 Q .772
(en other than one of those listed is encountered, this produces an ERR)
-.13 F .773(OR action.)-.52 F(In)10.523 E 1.43
(some cases, it is possible to mak)33.336 201 R 4.68(ear)-.13 G 1.43
(eduction without looking at the ne)-4.68 F 1.43(xt tok)-.195 F 1.43
(en, and a)-.13 F 1.326(special tok)33.336 216 R(en)-.13 E/F2 13
/Courier@0 SF($default)4.577 E F1 1.327(will appear in the listing.)
4.577 F 1.327(This is equi)7.827 F -.325(va)-.325 G 1.327
(lent to a wildcard in).325 F .264(the A)33.336 231 R .264(CTION table.)
-.52 F .263(The last group of lines gi)6.764 F .653 -.195(ve t)-.325 H
.263(he GO).195 F .731 -.234(TO a)-.52 H .263(ctions if this state is e)
.234 F(xposed)-.195 E 2.004(after a reduction.)33.336 246 R 2.005
(These are listed by the symbol \(lhs\) which has been reduced.)8.504 F
2.005(It is)8.505 F 3.7(possible that a single LALR\(1\) state will con\
tain multiple items with dif)33.336 261 R 3.699(ferent lhs)-.325 F
(symbols.)33.336 276 Q(Let')33.336 297 Q 6.015(st)-.715 G 2.765
(race out the steps which the Bison LALR parser generator algorithm tak)
-6.015 F 2.765(es in)-.13 F 1.856(constructing the states and tables.)
33.336 312 R 1.855(In state 0, there are tw)8.355 F 5.105(op)-.13 G
1.855(ossible tok)-5.105 F 1.855(ens which can)-.13 F(occur ne)33.336
327 Q(xt and be v)-.195 E(alid, NUM and \(.)-.325 E
(These lead to states 1 and 2 respecti)6.5 E -.195(ve)-.325 G(ly:).195 E
/F3 10/Courier@0 SF(state 1)33.336 339 Q 6(2e)57.336 363 S(xpr: NUM .)-6
E 30(3|)57.336 375 S(NUM . '+' NUM)-24 E 6('+' shift,)57.336 399 R
(and go to state 4)6 E 6($default reduce)57.336 423 R
(using rule 2 \(expr\))6 E F1(Ha)33.336 444 Q .627
(ving reached state 1 by ha)-.26 F .628(ving seen a NUM, a '+' tok)-.26
F .628(en w)-.13 F .628(ould lead us to belie)-.13 F 1.018 -.195(ve t)
-.325 H(hat).195 E .909
(we are in the middle of rule #3, as depicted by the cursor dot.)33.336
459 R .908(But an)7.408 F 4.158(yo)-.195 G .908(ther lookahead)-4.158 F
(tok)33.336 474 Q .236(en \(the)-.13 F F2($default)3.486 E F1 .236
(action\) w)3.486 F .236(ould lead us to belie)-.13 F .627 -.195(ve t)
-.325 H .237(hat we ha).195 F .627 -.195(ve j)-.26 H .237
(ust seen an instance).195 F(of rule #2.)33.336 489 Q F3(state 2)33.336
501 Q 6(1e)57.336 525 S(xpr: '\(' . expr '\)')-6 E 6(NUM shift,)57.336
549 R(and go to state 1)6 E 6('\(' shift,)57.336 561 R
(and go to state 2)6 E 6(expr go)57.336 585 R(to state 5)6 E F1 3.004
-1.04(We a)33.336 606 T .924(re almost in the same boat as state 0.)1.04
F 3.004 -1.04(We a)7.424 H .924(re be)1.04 F .924(ginning a ne)-.195 F
(w)-.325 E F2(expr)4.173 E F1 4.173(,a)C .923(nd thus the)-4.173 F .247
(same tok)33.336 621 R .247(ens are v)-.13 F .248
(alid and lead to the same actions as in state 0.)-.325 F(Let')6.748 E
3.498(sf)-.715 G(ollo)-3.498 E 3.498(wf)-.325 G .248(rom state 1)-3.498
F(to state 4:)33.336 636 Q F3(state 4)33.336 648 Q 6(3e)57.336 672 S
(xpr: NUM '+' . NUM)-6 E 6(NUM shift,)57.336 696 R(and go to state 7)6 E
F1(Ag)33.336 717 Q(ain, NUM is the only v)-.065 E(alid tok)-.325 E 3.25
(en. If)-.13 F(we see it, then we go to state 7:)3.25 E F3(state 7)
33.336 729 Q 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 16)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 6(3e)57.336 117 S(xpr: NUM '+' NUM .)-6 E 6
($default reduce)57.336 141 R(using rule 3 \(expr\))6 E/F2 13
/Times-Roman@0 SF .61(In state 7, it doesn')33.336 162 R 3.859(tm)-.234
G .609(atter what the look-ahead tok)-3.859 F .609(en is, we al)-.13 F
-.13(wa)-.13 G .609(ys perform this def).13 F(ault)-.13 E 4.069
(reduction. One)33.336 177 R .82(might ask wh)4.069 F 4.07(yt)-.065 G
.82(he state e)-4.07 F 4.07(xists? Wh)-.195 F 4.07(yn)-.065 G .82
(ot simply reduce in state 4?)-4.07 F(The)7.32 E .208
(answer is that the parser must preserv)33.336 192 R 3.458(et)-.195 G
.208(he one-to-one correspondence between states and)-3.458 F 5.389
(symbols. In)33.336 207 R 2.139(order to perform a reduction)5.389 F/F3
13/Courier@0 SF 2.14(expr: NUM '+' NUM)5.389 F F2 5.39(,w)C 2.14
(hich has 3 rhs)-5.39 F .658
(symbols, there must be 3 corresponding states on the stack.)33.336 222
R .657(Thus we shift in state 4 and)7.157 F 2.052(push another state \(\
state 7\) on the stack, "representing" the second instance of NUM.)
33.336 237 R 1.914
(Then we pop 3 symbols from the stack during the reduction, and we ha)
33.336 252 R 2.303 -.195(ve r)-.26 H 1.913(educed to).195 F F3(expr)
33.336 267 Q F2 7.794(.W)C 1.295(here can)-7.794 F F3(expr)4.545 E F2
1.295(be found in a GO)4.545 F 1.763 -.234(TO a)-.52 H 4.545(ction? It)
.234 F 1.295(can be found in state 2 or in)4.545 F .666(state 0.)33.336
282 R .665(In both cases, we see that the cursor w)7.166 F .665
(as immediately to the left of)-.13 F F3(expr)3.915 E F2 .665(in the)
3.915 F .686(rule, and no)33.336 297 R 3.936(ww)-.325 G .686
(hen we return back to that state, ha)-3.936 F .687(ving reduced)-.26 F
F3(expr)3.937 E F2 3.937(,i)C 3.937(ti)-3.937 G 3.937(so)-3.937 G .687
(nly logical)-3.937 F(that we adv)33.336 312 Q
(ance to a state where the cursor has stepped past)-.325 E F3(expr)3.25
E F2(:)A F1(state 3)33.336 324 Q 6(0$)57.336 348 S(accept: expr . $end)
-6 E 6($end shift,)57.336 372 R(and go to state 6)6 E(state 5)33.336 396
Q 6(1e)57.336 420 S(xpr: '\(' expr . '\)')-6 E 6('\)' shift,)57.336 444
R(and go to state 8)6 E F2(In state 3, we must see)33.336 477 Q F3($end)
3.25 E F2 3.25(,t)C(he end of input.)-3.25 E(This w)6.5 E(ould tak)-.13
E 3.25(eu)-.13 G 3.25(st)-3.25 G 3.25(os)-3.25 G(tate 6:)-3.25 E F1
(state 6)33.336 489 Q 6(0$)57.336 513 S(accept: expr $end .)-6 E 6
($default accept)57.336 537 R F2 1.845
(in which the only action is to accept the input.)33.336 552 R(Ag)8.345
E 1.845(ain, the parser appears to mak)-.065 F 5.095(ea)-.13 G(n)-5.095
E -.195(ex)33.336 567 S .94(traneous mo).195 F 1.33 -.195(ve \()-.195 H
(wh).195 E 4.19(yn)-.065 G .941
(ot simply accept in state 3?\) and this is to maintain consistenc)-4.19
F(y)-.195 E .691(of the stack.)33.336 582 R .691(Looking at state 5, ha)
7.191 F .691(ving seen)-.26 F F3(expr)3.941 E F2(follo)3.941 E .69
(wing '\(', the only v)-.325 F .69(alid tok)-.325 F .69(en is)-.13 F
('\)', and that will lead to state 8:)33.336 597 Q F1(state 8)33.336 609
Q 6(1e)57.336 633 S(xpr: '\(' expr '\)' .)-6 E 6($default reduce)57.336
657 R(using rule 1 \(expr\))6 E F2(in which the def)33.336 672 Q
(ault action for an)-.13 E 3.25(yt)-.195 G(ok)-3.25 E
(en is to reduce by rule #1.)-.13 E 3.224 -1.04(We h)33.336 693 T -2.925
-.26(av e)1.04 H(no)4.654 E 4.394(ws)-.325 G 1.145
(een all 8 states generated by this grammar)-4.394 F 7.645(.I)-.715 G
4.395(tm)-7.645 G 1.145(ay be instructi)-4.395 F 1.535 -.195(ve f)-.325
H 1.145(or the).195 F 1.233(reader to dra)33.336 708 R 4.483(wo)-.195 G
1.232(ut the state diagram, with edges representing the shift actions a\
nd goto)-4.483 F 3.697(actions. Let)33.336 723 R .447(us follo)3.697 F
3.697(wt)-.325 G .448(he operation of the parser when the input is)
-3.697 F F3 8.248(\(\(N)3.698 G .448(UM \) \))-8.248 F F2 6.948(.T)C(o)
-7.988 E .022(disambiguate which tok)33.336 738 R .021(en is which, we')
-.13 F .021(ll call the \214rst left paren \(1 and the second one \(2,)
-.13 F 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 17)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(etc.)33.336 120 Q/F2 8/Courier@0 SF 1.2(State stack)
33.936 132 S 60 1.2(token action)30 H 91.2(0\()33.936 144 S 85.2(1S)-90
G 1.2(HIFT\(2\))-84 G 60 7.2(02 \()33.936 156 T 85.2(2S)-6 G 1.2
(HIFT\(2\))-84 G 48 7.2(022 N)33.936 168 T 72 1.2(UM SHIFT\(1\))-6 H 36
7.2(0221 \))33.936 180 T 85.2(1R)-6 G 6 1.2(EDUCE expr:)-84 H 1.2(NUM)6
G 48 7.2(022 \))33.936 192 T 85.2(1G)-6 G 1.2(OTO \(2,expr\)==>5)-84 G
36 7.2(0225 \))33.936 204 T 85.2(1S)-6 G 1.2(HIFT\(8\))-84 G 24 7.2
(02258 \))33.936 216 T 85.2(2R)-6 G 1.2(EDUCE expr: \( expr \))-84 G 60
7.2(02 \))33.936 228 T 85.2(2G)-6 G 1.2(OTO \(2,expr\)==>5)-84 G 48 7.2
(025 \))33.936 240 T 85.2(2S)-6 G 1.2(HIFT\(8\))-84 G 36 7.2(0258 $)
33.936 252 T 66 1.2(end REDUCE)-6 H 1.2(expr: \( expr \))6 G 91.2(0$)
33.936 264 S 66 1.2(end GOTO)-90 H 1.2(\(0,expr\)==>3)6 G 60 7.2(03 $)
33.936 276 T 66 1.2(end SHIFT\(6\))-6 H 144 7.2(036 A)33.936 288 T 1.2
(CCEPT)-6 G F1 3.954 -1.04(We s)33.336 309 T 1.874
(ee that the LALR parser made as man)1.04 F 5.124(ys)-.195 G 1.875
(hifts as there were input tok)-5.124 F 1.875(ens, and as)-.13 F(man)
33.336 324 Q 7.179(yr)-.195 G 3.928
(eductions as there were non-terminals in the deri)-7.179 F -.325(va)
-.325 G 7.178(tion. From).325 F 3.928(this we can)7.178 F(conclude that\
 the LALR parser operates in linear time with respect to input length.)
33.336 339 Q/F3 13/Times-Bold@0 SF(Con\215icts)242.779 369 Q F1 .322(If\
, in a particular state, the LALR\(1\) parser generated by yacc or biso\
n can not determine)33.336 405 R .644(what action to tak)33.336 420 R
3.894(eb)-.13 G .644(ased on the single lookahead tok)-3.894 F .643
(en, then there is a "con\215ict" in that)-.13 F 3.25(state. Con\215ict)
33.336 435 R(comes in tw)3.25 E 3.25(of)-.13 G(orms:)-3.25 E 4.467<8353>
33.336 450 S 1.218
(hift/Reduce: The input seen up to this point matches a rule, b)-4.467 F
1.218(ut the lookahead tok)-.26 F(en)-.13 E(gi)33.336 465 Q -.195(ve)
-.325 G 3.337(sp).195 G .086
(romise that we could continue to shift it \(and possibly more tok)
-3.337 F .086(ens\) and e)-.13 F -.195(ve)-.325 G(ntually).195 E
(match a dif)33.336 480 Q(ferent, "better" rule.)-.325 E 4.209<8352>
33.336 495 S .959(educe/Reduce: There are tw)-4.209 F 4.209(oo)-.13 G
4.209(rm)-4.209 G .96(ore rules which match the input seen thus f)-4.209
F(ar)-.13 E 4.21(,a)-.52 G(nd)-4.21 E(the lookahead tok)33.336 510 Q
(en doesn')-.13 E 3.25(th)-.234 G
(elp us in determining which one to apply)-3.25 E(.)-.845 E 1.005(Con\
\215icts may arise because the grammar as written is truly ambiguous, o\
r the grammar)33.336 531 R .977(may be perfectly clear b)33.336 546 R
.978(ut it f)-.26 F .978(ails to meet the criteria for LALR\(1\).)-.13 F
.978(yacc/bison resolv)7.478 F(es)-.195 E 4.758
(shift/reduce con\215icts in f)33.336 561 R -.26(avo)-.13 G 8.008(ro).26
G 8.008(fs)-8.008 G 4.758
(hifting \(unless some other means of resolution)-8.008 F -.195(ove)
33.336 576 S 1.308(rrides\), and considers these to be a w).195 F 4.558
(arning. Ho)-.13 F(we)-.325 E -.195(ve)-.325 G 2.349 -.52(r, r).195 H
1.309(educe/reduce con\215icts ha).52 F -.195(ve)-.26 G .782(no def)
33.336 591 R .782(ault resolution because it isn')-.13 F 4.032(tc)-.234
G .782(lear which semantic action to trigger)-4.032 F 7.282(.B)-.715 G
.782(ison picks)-7.282 F .661(the \214rst rule mentioned, b)33.336 606 R
.661(ut this is almost certainly not what you w)-.26 F 3.912(ant. It)
-.13 F .662(is a good idea)3.912 F 2.211(to eliminate all shift/reduce \
or reduce/reduce con\215icts, using the techniques described)33.336 621
R(belo)33.336 636 Q -.845(w.)-.325 G F3(Operator Pr)208.433 666 Q
(ecedence)-.234 E F1(Consider this e)33.336 702 Q(xpression grammar:)
-.195 E/F4 10/Courier@0 SF(%token NUM)33.336 714 Q(%%)33.336 726 Q 12
(expr: NUM)33.336 738 R 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 18)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF 24(|e)51.336 117 S(xpr '+' expr)-24 E 24(|e)51.336 129 S
(xpr '-' expr)-24 E 24(|e)51.336 141 S(xpr '/' expr)-24 E 24(|e)51.336
153 S(xpr '*' expr)-24 E 24(|')51.336 165 S(\(' expr '\)')-24 E/F2 13
/Times-Roman@0 SF .532(running this through bison yields 4 states with \
4 shift/reduce con\215icts each, for a total of)33.336 186 R 6.568
(16. Let')33.336 201 R 3.318(sl)-.715 G .068(ook in the)-3.318 F/F3 13
/Courier@0 SF(.output)3.317 E F2 .067(\214le created by)3.317 F F3 .067
(bison -v --report=look-ahead)3.317 F F2
(at one of the con\215icting states:)33.336 216 Q F1(state 14)33.336 228
Q 6(2e)57.336 252 S(xpr: expr . '+' expr)-6 E 30(3|)57.336 264 S
(expr . '-' expr)-24 E 30(4|)57.336 276 S(expr . '/' expr)-24 E 30(5|)
57.336 288 S(expr . '*' expr)-24 E([$end, '+', '-', '/', '*', '\)'])12 E
30(5|)57.336 300 S(expr '*' expr .)-24 E
([$end, '+', '-', '/', '*', '\)'])12 E 6('+' shift,)57.336 324 R
(and go to state 6)6 E 6('-' shift,)57.336 336 R(and go to state 7)6 E 6
('/' shift,)57.336 348 R(and go to state 8)6 E 6('*' shift,)57.336 360 R
(and go to state 9)6 E 36('+' [reduce)57.336 384 R
(using rule 5 \(expr\)])6 E 36('-' [reduce)57.336 396 R
(using rule 5 \(expr\)])6 E 36('/' [reduce)57.336 408 R
(using rule 5 \(expr\)])6 E 36('*' [reduce)57.336 420 R
(using rule 5 \(expr\)])6 E 6($default reduce)57.336 432 R
(using rule 5 \(expr\))6 E F2 .38(Consider the input)33.336 453 R F3
(2*3+4)3.63 E F2 .38(at the point of reaching the +.)3.63 F .38
(The parser will see 2, reduce it)6.88 F 2.11(to e)33.336 468 R(xpr)
-.195 E 5.36(,s)-.52 G 2.11(hift the *, see 3 and reduce that to e)-5.36
F(xpr)-.195 E 8.609(.N)-.715 G -.325(ow)-8.609 G 5.359(,w)-.52 G(e)
-5.359 E/F4 13/Times-Italic@0 SF(could)5.359 E F2 2.109(be at)5.359 F F3
2.109(expr '*')5.359 F 2.007(expr .)33.336 483 R F2 2.008
(in which case we should reduce to e)5.257 F(xpr)-.195 E 8.508(.H)-.715
G -.325(ow)-8.508 G -2.795 -.325(ev e).325 H 3.048 -.52(r, w).325 H(e)
.52 E F4(could)5.258 E F2 2.008(also be in the)5.258 F(middle of)33.336
498 Q F3(expr . '+' expr)3.25 E F2 3.25(,i)C 3.25(nw)-3.25 G
(hich case we should shift the + and continue.)-3.25 E 2.935 -1.04(We s)
33.336 519 T .855(ee by the f)1.04 F .855
(act that the con\215icting reduce action is inside of square brack)-.13
F .854(ets that the)-.13 F 3.859(parser has resolv)33.336 534 R 3.859
(ed the shift/reduce con\215ict in f)-.195 F -.26(avo)-.13 G 7.109(ro)
.26 G 7.109(fs)-7.109 G 3.859(hift, which is the def)-7.109 F(ault)-.13
E(beha)33.336 549 Q(vior)-.26 E 6.506(.T)-.715 G .006
(his is probably not what we w)-6.506 F .005
(ant though, in terms of preserving the semantics)-.13 F .475
(of the language.)33.336 564 R .475(This con\215ict appeared earlier)
6.975 F 3.726(,a)-.52 G 3.726(sw)-3.726 G 3.726(ew)-3.726 G .476
(ere considering LL\(1\) grammars,)-3.726 F .04(and we solv)33.336 579 R
.04(ed it by re-writing the grammar to be unambiguous.)-.195 F(Ho)6.54 E
(we)-.325 E -.195(ve)-.325 G 1.08 -.52(r, y).195 H .04(acc and bison).52
F(ha)33.336 594 Q .511 -.195(ve s)-.26 H .121
(ome nice con\215ict resolution mechanisms which are technically be).195
F .122(yond the scope of)-.195 F .923(LALR\(1\) parsing b)33.336 609 R
.922(ut come in handy)-.26 F 7.422(.\()-.845 G .922(In the listing abo)
-7.422 F -.195(ve)-.195 G 4.172(,t).195 G .922(he square brack)-4.172 F
.922(ets after the)-.13 F(tw)33.336 624 Q 4.21(oi)-.13 G .96
(nstances of rule 5 list the possible look-ahead tok)-4.21 F .961
(ens for which a reduction by that)-.13 F 3.64
(rule in that state might be considered.)33.336 639 R 3.64
(This information is supplied only with the)10.14 F F3
(--report=look-ahead)33.336 654 Q F2(or)3.25 E F3(--report-all)3.25 E F2
(options to bison\).)3.25 E 3.751
(In this case, we can associate precedence le)33.336 675 R -.195(ve)
-.325 G 3.751(ls with the operator tok).195 F 7.001(ens. A)-.13 F(ne)
7.001 E(w)-.325 E(grammar is:)33.336 690 Q F1(%token NUM)33.336 702 Q
(%right '=')33.336 714 Q(%left '+' '-')33.336 726 Q(%left '*' '/')33.336
738 Q 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 19)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(%%)33.336 117 Q 12(expr: NUM)33.336 129 R 24(|e)51.336
141 S(xpr '+' expr)-24 E 24(|e)51.336 153 S(xpr '-' expr)-24 E 24(|e)
51.336 165 S(xpr '/' expr)-24 E 24(|e)51.336 177 S(xpr '*' expr)-24 E 24
(|')51.336 189 S(\(' expr '\)')-24 E 24(|I)51.336 201 S(DENT '=' expr)
-24 E(;)51.336 213 Q/F2 13/Times-Roman@0 SF(The)33.336 234 Q/F3 13
/Courier@0 SF(%left)5.304 E F2(and)5.304 E F3(%right)5.304 E F2 2.054
(declarations specify the associati)5.304 F 2.054
(vity and precedence of the)-.325 F(tok)33.336 249 Q 4.805(ens. T)-.13 F
(ok)-1.04 E 1.555(ens mentioned earlier ha)-.13 F 1.945 -.195(ve l)-.26
H -.325(ow).195 G 1.555(er precedence.).325 F 1.555(All tok)8.055 F
1.556(ens mentioned in the)-.13 F 1.521(same line ha)33.336 264 R 1.911
-.195(ve t)-.26 H 1.521(he same precedence and associati).195 F(vity)
-.325 E 4.771(,i)-.845 G 1.521(.e. it is impossible to ha)-4.771 F 1.911
-.195(ve l)-.26 H(eft-).195 E 1.346(and right-associati)33.336 279 R
1.736 -.195(ve t)-.325 H(ok).195 E 1.346(ens in the same precedence le)
-.13 F -.195(ve)-.325 G 4.596(l. It).195 F 1.346
(is also possible to specify)4.596 F F3(%nonassoc)33.336 294 Q F2
(for tok)3.25 E(ens which do not ha)-.13 E .39 -.195(ve a)-.26 H .39
-.195(ny a).195 H(ssociati).195 E(vity)-.325 E(.)-.845 E 1.184
(Not only do tok)33.336 315 R 1.184(ens ha)-.13 F 1.574 -.195(ve p)-.26
H 1.184(recedence, b).195 F 1.184
(ut a rule inherits precedence from the right-most)-.26 F(tok)33.336 330
Q 1.808(en on its rhs.)-.13 F 1.809
(The precedence of a rule can also be established e)11.558 F 1.809
(xplicitly with the)-.195 F F3(%prec)33.336 345 Q F2(tag.)3.25 E 4.884
(When there is a shift/reduce con\215ict, operator precedence/associati)
33.336 366 R 4.883(vity resolv)-.325 F 4.883(es it)-.195 F
(according to the follo)33.336 381 Q(wing rules:)-.325 E 3.25<8349>
33.336 396 S 3.25(fp)-3.25 G(rec\(tok)-3.25 E
(en\) > prec\(rule\), then shift)-.13 E 3.25<8349>33.336 411 S 3.25(fp)
-3.25 G(rec\(tok)-3.25 E(en\) < prec\(rule\), then reduce)-.13 E 3.25
<8349>33.336 426 S 3.25(fp)-3.25 G(rec\(tok)-3.25 E
(en\)==prec\(rule\) and tok)-.13 E(en is left-associati)-.13 E -.195(ve)
-.325 G 3.25(,r).195 G(educe)-3.25 E 3.25<8349>33.336 441 S 3.25(fp)
-3.25 G(rec\(tok)-3.25 E(en\)==prec\(rule\) and tok)-.13 E
(en is right-associati)-.13 E -.195(ve)-.325 G 3.25(,s).195 G(hift)-3.25
E 3.25<8349>33.336 456 S 3.25(fp)-3.25 G(rec\(tok)-3.25 E
(en\)==prec\(rule\) and tok)-.13 E(en is non-associati)-.13 E -.195(ve)
-.325 G 3.25(,e).195 G(rror)-3.25 E 5.62<8349>33.336 471 S 5.62(fe)-5.62
G 2.37(ither the rule or the tok)-5.62 F 2.37
(en has no de\214ned precedence, shift \(and Bison issues a)-.13 F
(shift/reduce con\215ict w)33.336 486 Q(arning\))-.13 E(No)33.336 507 Q
3.637 -.845(w, l)-.325 H(et').845 E 5.197(sl)-.715 G 1.947
(ook at the pesk)-5.197 F 5.197(ys)-.195 G 1.947(tate ag)-5.197 F 1.947
(ain \(in Bison 2.3, it w)-.065 F 1.946(as necessary to specify)-.13 F
F3(-v)5.196 E(--report=all)33.336 522 Q F2 1.9
(to get this reporting, and with the disambiguating features, the state)
5.15 F(numbers changed\):)33.336 537 Q F1(state 13)33.336 549 Q 6(2e)
57.336 573 S(xpr: expr . '+' expr)-6 E 30(3|)57.336 585 S
(expr . '-' expr)-24 E 30(4|)57.336 597 S(expr . '/' expr)-24 E 30(5|)
57.336 609 S(expr . '*' expr)-24 E([$end, '+', '-', '*', '/', '\)'])12 E
30(5|)57.336 621 S(expr '*' expr .)-24 E
([$end, '+', '-', '*', '/', '\)'])12 E 6($default reduce)57.336 645 R
(using rule 5 \(expr\))6 E(Conflict between rule 5 and token '+' resolv\
ed as reduce \('+' < '*'\).)57.336 669 Q(Conflict between rule 5 and to\
ken '-' resolved as reduce \('-' < '*'\).)57.336 681 Q(Conflict between\
 rule 5 and token '*' resolved as reduce \(%left '*'\).)57.336 693 Q(Co\
nflict between rule 5 and token '/' resolved as reduce \(%left '/'\).)
57.336 705 Q F2 .185(The input 2*3+4 is resolv)33.336 726 R .184
(ed as a reduce action, because the precedence of + is lo)-.195 F .184
(wer than)-.325 F 2.543
(the precedence of rule 5 \(which inherits the precedence of *\).)33.336
741 R(Lik)9.044 E -.325(ew)-.13 G 2.544(ise, 2*3*4 is a).325 F 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 20)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF(reduce because * is left-associati)33.336 120 Q
-.195(ve)-.325 G(.).195 E/F2 13/Times-Bold@0 SF(The Dangling ELSE)
211.345 150 Q F1 4.602(Ac)33.336 186 S 1.352(lassic problem in block-st\
ructured programming languages is the nesting of if-then-)-4.602 F
(else statements.)33.336 201 Q(Consider the grammar:)6.5 E/F3 10
/Courier@0 SF 12(stmt: expr)33.336 213 R 30(|i)45.336 225 S(f_stmt)-30 E
(;)45.336 237 Q 42(if_stmt: IF)33.336 261 R('\(' expr '\)' stmt)6 E 72
(|I)51.336 273 S 6(F')-72 G(\(' expr '\)' stmt ELSE stmt)-6 E(;)51.336
285 Q 12(expr: NUM)33.336 309 R 109.2(;/)90.936 321 S 6(*t)-109.2 G
(he ; terminates the rule, it is not a token! */)-6 E F1 .117
(which is an abstraction of the C grammar)33.336 336 R 6.617(.I)-.715 G
3.367(fw)-6.617 G 3.367(ew)-3.367 G .117
(ere to run this grammar through Bison,)-3.367 F(it w)33.336 351 Q
(ould report 1 shift/reduce con\215ict.)-.13 E(The)6.5 E/F4 13/Courier@0
SF(.output)3.25 E F1(\214le sho)3.25 E(ws:)-.325 E F3(state 10)33.336
363 Q 6(3i)57.336 387 S(f_stmt: IF '\(' expr '\)' stmt .)-6 E
([$end, ELSE])12 E 48(4|)57.336 399 S
(IF '\(' expr '\)' stmt . ELSE stmt)-42 E 6(ELSE shift,)57.336 423 R
(and go to state 11)6 E 30(ELSE [reduce)57.336 447 R
(using rule 3 \(if_stmt\)])6 E 6($default reduce)57.336 459 R
(using rule 3 \(if_stmt\))6 E F1 .203(Consider the input)33.336 480 R F4
.202(if \(1\) if \(2\) 3 else 4)3.453 F F1 3.452(,a)C .202(nd the mo)
-3.452 F -.195(ve)-.195 G 3.452(sw).195 G .202(hich the parser will)
-3.452 F(mak)33.336 495 Q(e:)-.13 E/F5 8/Courier@0 SF 1.2(Symbol stack)
33.936 507 S 1.2(LA token)72 G 1.2(Action)48 G 78 1.2(IF SHIFT)225.936
519 T 174 1.2(IF \()33.936 531 T 1.2(SHIFT)90 G 1.2(IF \()33.936 543 S
54 1.2(NUM{1} SHIFT)168 H 1.2(IF \( NUM{1})33.936 555 S 91.2(\)R)126 G
1.2(EDUCE: expr:NUM)-90 G 1.2(IF \( expr)33.936 567 S 91.2(\)S)138 G 1.2
(HIFT)-90 G 1.2(IF \( expr \))33.936 579 S 78 1.2(IF SHIFT)126 H 1.2
(IF \( expr \) IF)33.936 591 S 91.2(\(S)108 G 1.2(HIFT)-90 G 1.2
(IF \( expr \) IF \()33.936 603 S 54 1.2(NUM{2} SHIFT)96 H 1.2
(IF \( expr \) IF \( NUM{2})33.936 615 S 91.2(\)R)54 G 1.2
(EDUCE: expr:NUM)-90 G 1.2(IF \( expr \) IF \( expr)33.936 627 S 91.2
(\)S)66 G 1.2(HIFT)-90 G 1.2(IF \( expr \) IF \( expr \))33.936 639 S 54
1.2(NUM{3} SHIFT)54 H 1.2(IF \( expr \) IF \( expr \) NUM{3})33.936 651
S 66 1.2(ELSE REDUCE:)12 H 1.2(expr:NUM)6 G 1.2
(IF \( expr \) IF \( expr \) expr)33.936 663 S 66 1.2(ELSE REDUCE:)24 H
1.2(stmt:expr)6 G 1.2(IF \( expr \) IF \( expr \) stmt)33.936 675 S 66
1.2(ELSE conflict)24 H F1 2.237 -1.04(We a)33.336 690 T .157(re no)1.04
F 3.407(wi)-.325 G 3.407(ns)-3.407 G .157(tate 10, and there are tw)
-3.407 F 3.407(op)-.13 G 3.407(ossibilities. W)-3.407 F 3.407(ec)-1.04 G
.158(ould be at the end of rule #3,)-3.407 F .928(in which case we shou\
ld reduce, or we could be in the middle of rule #4, in which case)33.336
705 R .265(we should shift.)33.336 720 R .265(The f)6.765 F .265
(act that the)-.13 F F4 .265(reduce using rule3)3.515 F F1 .265
(action is in brack)3.515 F .266(ets tells us)-.13 F 1.036
(that bison has applied the def)33.336 735 R 1.036
(ault shift/reduce con\215ict resolution in f)-.13 F -.26(avo)-.13 G
4.286(ro).26 G 4.286(fs)-4.286 G 4.286(hifting. In)-4.286 F 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 21)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF .628(this case, this is actually what we w)33.336
120 R 3.878(ant. \(Colloquially)-.13 F 3.878(,w)-.845 G 3.878(es)-3.878
G .628(ay that in the C language, an)-3.878 F .178
(else associates with the nearest if.\))33.336 135 R(Ho)6.678 E(we)-.325
E -.195(ve)-.325 G 1.218 -.52(r, i).195 H 3.428(tw).52 G .178
(ould be nice to say so e)-3.558 F .178(xplicitly and not)-.195 F(ha)
33.336 150 Q .39 -.195(ve t)-.26 H 3.25(od).195 G(eal with the w)-3.25 E
3.25(arning. W)-.13 F 3.25(ec)-1.04 G(ould do this as follo)-3.25 E(ws:)
-.325 E/F2 10/Courier@0 SF(%left IF)33.336 162 Q(%left ELSE)33.336 174 Q
(%token NUM)33.336 186 Q(%%)33.336 198 Q 12(stmt: expr)33.336 210 R 30
(|i)45.336 222 S(f_stmt)-30 E(;)45.336 234 Q 42(if_stmt: IF)33.336 258 R
('\(' expr '\)' stmt)6 E(%prec IF)120 E 72(|I)51.336 270 S 6(F')-72 G
(\(' expr '\)' stmt ELSE stmt)-6 E(%prec ELSE)69.6 E(;)51.336 282 Q 12
(expr: NUM;)33.336 306 R F1(No)33.336 327 Q 3.706(ww)-.325 G 3.706(eh)
-3.706 G -2.925 -.26(av e)-3.706 H .457
(listed IF and ELSE so that IF has lo)3.966 F .457(wer precedence.)-.325
F(\(W)6.957 E 3.707(en)-1.04 G .457(eed the)-3.707 F/F3 13/Courier@0 SF
(%prec)3.707 E(IF)33.336 342 Q F1 1.919
(because otherwise the rule has no de\214ned precedence.)5.169 F(The)
8.419 E F3 1.919(%prec ELSE)5.169 F F1 1.919(on the)5.169 F 2.074
(second rule is redundant and purely stylistic.\))33.336 357 R 2.074
(This forces a shift on ELSE in rule 3,)8.574 F(eliminating the w)33.336
372 Q(arning:)-.13 E F2(state 10)33.336 384 Q 6(3i)57.336 408 S
(f_stmt: IF '\(' expr '\)' stmt .)-6 E([$end])12 E 48(4|)57.336 420 S
(IF '\(' expr '\)' stmt . ELSE stmt)-42 E 6(ELSE shift,)57.336 444 R
(and go to state 11)6 E 6($default reduce)57.336 468 R
(using rule 3 \(if_stmt\))6 E(Conflict between rule 3 and token ELSE re\
solved as shift \(IF < ELSE\).)57.336 492 Q/F4 13/Times-Bold@0 SF
(Lookahead ambiguities)202.505 522 Q F1 .925(Sometimes yacc/bison can n\
ot generate a parser for a grammar because of limited look-)33.336 558 R
6.15(ahead. W)33.336 573 R 6.15(eh)-1.04 G -2.925 -.26(av e)-6.15 H
2.901
(seen an LR\(2\) grammar and clearly LALR\(1\) can not deal with it)
6.411 F 1.497(because it needs tw)33.336 588 R 4.747(ot)-.13 G(ok)-4.747
E 1.497(ens of lookahead.)-.13 F 1.497
(But consider this grammar \(from the Bison)7.997 F(manual\):)33.336 603
Q F2(%token ID)33.336 630 Q(%%)33.336 642 Q 27.6(def: param_spec)33.336
654 R(return_spec ',')6 E(;)90.936 666 Q(param_spec:)33.336 690 Q(type)
90.936 702 Q 6(|n)90.936 714 S(ame_list ':' type)-6 E(;)90.936 726 Q 0
Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 22)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(return_spec:)33.336 117 Q(type)90.936 129 Q 6(|n)90.936
141 S(ame ':' type)-6 E(;)90.936 153 Q 21.6(type: ID;)33.336 177 R 21.6
(name: ID;)33.336 201 R(name_list:)33.336 225 Q(name)90.936 237 Q 6(|n)
90.936 249 S(ame ',' name_list)-6 E(;)90.936 261 Q/F2 13/Times-Roman@0
SF .061(Consider the input ID ',)33.336 282 R 3.311('. It)-.91 F .061
(should be possible to parse this without ambiguity)3.311 F 6.561(.I)
-.845 G 3.312(ti)-6.561 G 3.312(sn)-3.312 G .062(ot a)-3.312 F 2.061
(problem that there are tw)33.336 297 R 5.311(or)-.13 G 2.061
(ules which ha)-5.311 F 2.45 -.195(ve t)-.26 H 2.06(he e).195 F 2.06
(xact same right-hand-side.)-.195 F(Because)8.56 E/F3 13/Courier@0 SF
(param_spec)33.336 312 Q F2 3.459(can not deri)6.709 F 3.849 -.195(ve t)
-.325 H(o).195 E/F4 13/Symbol-Slanted SF(e)6.709 E F2 6.709(,a)C 3.459
(nd because)-6.709 F F3(return_spec)6.709 E F2 3.459(can not contain a)
6.709 F 4.929(comma, then the tok)33.336 327 R 4.929(en sequence ID ',)
-.13 F 8.179('o)-.91 G 4.929(ccurring at the start of input must be)
-8.179 F F3 1.345(param_spec -> name_list -> name)33.336 342 R F2 7.845
(.E)C -.195(ve)-7.845 G 4.595(nt).195 G 1.345
(hough this grammar is LR\(1\), in)-4.595 F
(yacc or bison it produces a reduce/reduce con\215ict:)33.336 357 Q F1
(state 1)33.336 369 Q 6(6t)57.336 393 S(ype: ID .)-6 E([ID, ','])12 E 6
(7n)57.336 405 S(ame: ID .)-6 E([',', ':'])12 E 36(',' reduce)57.336 429
R(using rule 6 \(type\))6 E 36(',' [reduce)57.336 441 R
(using rule 7 \(name\)])6 E 36(':' reduce)57.336 453 R
(using rule 7 \(name\))6 E 6($default reduce)57.336 465 R
(using rule 6 \(type\))6 E F2 .952
(The problem is that LALR has combined tw)33.336 486 R 4.202(ok)-.13 G
.951(ernels into state 1, and thus can')-4.332 F 4.201(td)-.234 G(ecide)
-4.201 E .632(whether ID is a)33.336 501 R F3(type)3.882 E F2 .632(or a)
3.882 F F3(name)3.883 E F2 7.133(.I)C 3.883(ts)-7.133 G(houldn')-3.883 E
3.883(th)-.234 G -2.925 -.26(av e)-3.883 H .633(done that, b)4.143 F
.633(ut this is a de\214cienc)-.26 F 3.883(yo)-.195 G(f)-3.883 E .342
(the LALR algorithm.)33.336 516 R .341(This grammar is LR\(1\) b)6.842 F
.341(ut not LALR\(1\).)-.26 F .341(One w)6.841 F .341
(ay to \214x this is to)-.13 F(introduce an in)33.336 531 Q -.325(va)
-.52 G(lid production, no).325 E(w:)-.325 E F1(return_spec:)33.336 543 Q
(type)90.936 555 Q 6(|n)90.936 567 S(ame ':' type)-6 E 6(|I)90.936 579 S
6(DB)-6 G(OGUS)-6 E(;)90.936 591 Q F2 .436(Where BOGUS is a dummy tok)
33.336 606 R .436(en which will ne)-.13 F -.195(ve)-.325 G 3.686(rb).195
G 3.686(er)-3.686 G .436(eturned by the le)-3.686 F -.195(xe)-.195 G
5.116 -.715(r. T).195 H .436(his forces).715 F 2.07
(some of the states to be split and \214x)33.336 621 R 2.07
(es the ambiguity)-.195 F 8.569(.A)-.845 G 2.069
(nother approach might be to)-8.569 F .123
(\215atten the grammar and remo)33.336 636 R .513 -.195(ve t)-.195 H(he)
.195 E F3(type)3.373 E F2(and)3.373 E F3(name)3.373 E F2 .123
(rules, inlining their de\214nition where)3.373 F(the)33.336 651 Q 3.25
(ya)-.195 G(ppear in the)-3.25 E F3(param_spec)3.25 E F2(,)A F3
(return_spec)3.25 E F2(and)3.25 E F3(name_list)3.25 E F2(rules.)3.25 E
/F5 13/Times-Bold@0 SF(Other con\215ict pr)201.374 681 Q(oblems)-.234 E
F2 .404
(There are other cases where LALR\(1\) parsers get in to trouble.)33.336
717 R(Thankfully)6.904 E 3.654(,i)-.845 G 3.654(nm)-3.654 G .403
(ost real-)-3.654 F -.13(wo)33.336 732 S 1.319(rld cases, the).13 F 4.57
(yc)-.195 G 1.32(an be \214x)-4.57 F 1.32(ed, which is wh)-.195 F 4.57
(yL)-.065 G 1.32(ALR\(1\) parsers continue to be the most)-4.57 F 0 Cg
EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 23)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.737(widely used.)33.336 120 R 1.737
(If the con\215ict can not be resolv)8.237 F 1.737
(ed entirely within the parser)-.195 F 4.986(,i)-.52 G 4.986(tm)-4.986 G
1.736(ight be)-4.986 F 5.225(necessary to simplify the grammar and try \
to \214x things in the semantic stage.)33.336 135 R(Alternati)33.336 150
Q -.195(ve)-.325 G(ly).195 E 4.017(,i)-.845 G 4.017(tm)-4.017 G .767
(ight be possible to pass information back do)-4.017 F .767
(wn to the le)-.325 F -.195(xe)-.195 G 4.017(rt).195 G 4.017(oc)-4.017 G
.767(ause it)-4.017 F .991(to alter beha)33.336 165 R .991
(vior and return dif)-.26 F .992(ferent tok)-.325 F .992
(en codes to resolv)-.13 F 4.242(et)-.195 G .992(he problem.)-4.242 F
.992(The Y)7.492 F .992(acc and)-1.3 F
(Bison documentation, as well as the O'Reilly Book, gi)33.336 180 Q .39
-.195(ve ex)-.325 H(amples of this approach.).195 E/F2 13/Times-Bold@0
SF(Semantic Actions)219.132 210 Q F1 3.951 -1.04(We h)33.336 246 T
-2.925 -.26(av e)1.04 H 1.871(seen that the yacc/bison state stack corr\
esponds to the symbols \(terminals or)5.381 F 2.498
(non-terminals\) in progress.)33.336 261 R 2.498
(In addition to this state, yacc/bison maintains a semantic)8.998 F
-.325(va)33.336 276 S 3.108
(lue stack in lock-step with the state stack.).325 F 3.108
(When a rule is reduced, this stack is)9.608 F 1.4
(accessible from within the semantic action by use of)33.336 291 R/F3 13
/Courier@0 SF($)4.65 E F1 4.65(macros. It)4.65 F 1.4(is easiest to gi)
4.65 F 1.79 -.195(ve a)-.325 H(n).195 E -.195(ex)33.336 306 S(ample:)
.195 E/F4 10/Courier@0 SF
(/* %debug generates code to print out debugging actions */)33.336 318 Q
(%debug)33.336 330 Q(/* %error-verbose causes bison to generous meaning\
ful syntax error messages */)33.336 342 Q(%error-verbose)33.336 354 Q
(%{)33.336 366 Q(#define YYDEBUG 1)33.336 378 Q(%})33.336 390 Q
(%token NUM)33.336 402 Q(%token SEP)33.336 414 Q(%left '+' '-')33.336
426 Q(%left '*' '/')33.336 438 Q(%nonassoc '\(')33.336 450 Q(%%)33.336
462 Q -2.4(exprlist: expr)33.336 474 R
({printf\("EXPR VALUE IS %d\\n",$$\);})91.2 E 6(|e)90.936 486 S
(xprlist SEP expr)-6 E({printf\("EXPR VALUE IS)1.2 E(%d\\n",$3\);})18 E
(;)90.936 498 Q 21.6(expr: NUM)33.336 522 R({$$=$1;})97.2 E 33.6(|e)
51.336 534 S(xpr '+' expr)-33.6 E({$$ = $1 + $3;})37.2 E 24(|e)51.336
546 S(xpr '-' expr)-24 E({$$=$1 - $3;})46.8 E 24(|e)51.336 558 S
(xpr '/' expr)-24 E({if \($3 ==0\) fprintf\(stderr,)46.8 E
("/0 err\\n"\); else $$=$1 / $3;})206.136 570 Q 24(|e)51.336 582 S
(xpr '*' expr)-24 E({$$=$1*$3;})46.8 E 24(|')51.336 594 S
(-' expr %prec '\(' {$$= -1 * $2; })-24 E 33.6(|')51.336 606 S
(\(' expr '\)')-33.6 E({$$=$2;})43.2 E(;)51.336 618 Q(%%)33.336 642 Q
(main\(\))33.336 654 Q({)33.336 666 Q(yydebug=1;)90.936 678 Q
(yyparse\(\);)90.936 690 Q(})33.336 702 Q(yyerror\(char *err\))33.336
726 Q({)33.336 738 Q 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 24)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
10/Courier@0 SF(fprintf\(stderr,"syntax error:%s0,err\);)90.936 117 Q(})
33.336 129 Q/F2 13/Times-Roman@0 SF(Consider the input)33.336 150 Q/F3
13/Courier@0 SF(4+5)3.25 E F2 6.5(.T)C(he parser will mak)-6.5 E 3.25
(et)-.13 G(he follo)-3.25 E(wing mo)-.325 E -.195(ve)-.195 G(s:).195 E
/F4 8/Courier@0 SF 1.2(State/Symbol Stack)33.936 162 S 1.2(LA token)84 G
1.2(Value stack)48 G 1.2(ACTION)30 G 168 1.2(NUM SHIFT)225.936 174 T 168
1.2(NUM +)33.936 186 T 91.2(4R)90 G 1.2(EDUCE)-90 G 162 1.2(expr +)
33.936 198 T 91.2(4R)90 G 1.2(EDUCE)-90 G 162 1.2(expr +)33.936 210 T
91.2(4S)90 G 1.2(HIFT)-90 G 1.2(expr +)33.936 222 S 72 1.2(NUM 4)156 H
66 1.2(?? SHIFT)6 H 1.2(expr + NUM)33.936 234 S 66 1.2($end 4)132 H 1.2
(?? 5)6 G 1.2(REDUCE)60 G 1.2(expr + expr)33.936 246 S 66 1.2($end 4)126
H 1.2(?? 5)6 G 1.2(REDUCE)60 G 162 1.2(expr $end)33.936 258 T 91.2(9A)72
G 1.2(CCEPT)-90 G F2 .469(When a tok)33.336 273 R .469
(en is shifted, the v)-.13 F .469(alue of the global v)-.325 F(ariable)
-.325 E F3(yylval)3.719 E F2 3.719(,w)C .468(hich has been set by)-3.719
F .555(the le)33.336 288 R -.195(xe)-.195 G 1.595 -.52(r, i).195 H 3.805
(sp).52 G .556(ushed onto the v)-3.805 F .556(alue stack.)-.325 F .556
(\(In the e)7.056 F .556(xample abo)-.195 F -.195(ve)-.195 G 3.806(,t)
.195 G(ok)-3.806 E .556(ens such as '+' ha)-.13 F -.195(ve)-.26 G .874
(no meaningful v)33.336 303 R 4.124(alue. The)-.325 F(le)4.124 E -.195
(xe)-.195 G 4.124(rw).195 G .874(ould probably not assign to)-4.254 F F3
(yylval)4.124 E F2 .873(in this case, and)4.124 F 1.846(its v)33.336 318
R 1.846(alue w)-.325 F 1.847(ould remain the same as the last tok)-.13 F
1.847(en seen with an actual semantic v)-.13 F(alue.)-.325 E 3.067
(Since the v)33.336 333 R 3.066
(alue of '+' is of no consequence to us, we lea)-.325 F 3.456 -.195
(ve i)-.26 H 6.316(tu).195 G 6.316(nde\214ned. Be)-6.316 F -.13(wa)-.325
G(re:).13 E(referencing the wrong semantic v)33.336 348 Q
(alue is a common yacc/bison error\))-.325 E 1.391
(During a reduction, as man)33.336 369 R 4.641(yv)-.195 G 1.391
(alue stack entries are popped from the stack as there are)-4.966 F
1.039(symbols on the rhs of the corresponding rule.)33.336 384 R 1.039
(The code embedded in curly braces after)7.539 F 1.587(the rule is e)
33.336 399 R -.195(xe)-.195 G 4.837(cuted. This).195 F 1.587
(code is copied v)4.837 F 1.587(erbatim into the)-.195 F F3(yyparse)
4.837 E F2 1.587(function, e)4.837 F(xcept)-.195 E .463
(that occurrences of)33.336 414 R F3($1)3.713 E F2 .463
(are translated to an e)3.713 F .463
(xpression which accesses the \214rst \(left-most\))-.195 F .09
(of the popped v)33.336 429 R .09(alues, i.e. it corresponds to the v)
-.325 F .09(alue of the \214rst rhs symbol.)-.325 F(Lik)6.591 E -.325
(ew)-.13 G(ise,).325 E F3($2)3.341 E F2 .332
(corresponds to the second symbol, etc.)33.336 444 R F3($$)6.832 E F2
.332(represents a temporary v)3.582 F .332(ariable which is used)-.325 F
.36(to hold the computed v)33.336 459 R .36
(alue which become the semantic v)-.325 F .36
(alue of the symbol on the lhs of)-.325 F(the rule.)33.336 474 Q
(After the rule has e)6.5 E -.195(xe)-.195 G(cuted, this).195 E F3($$)
3.25 E F2 -.325(va)3.25 G(lue will be pushed onto the v).325 E
(alue stack.)-.325 E 1.173
(If there is no embedded action, or the action does not contain an e)
33.336 495 R 1.172(xplicit assignment to)-.195 F F3($$)33.336 510 Q F2
3.681(,t)C .431(hen the def)-3.681 F .432(ault action)-.13 F F3($$=$1)
3.682 E F2(tak)3.682 E .432(es place, i.e. the v)-.13 F .432
(alue of the lhs is the v)-.325 F .432(alue of the)-.325 F
(\214rst rhs symbol.)33.336 525 Q/F5 13/Times-Bold@0 SF
(Synthesized and Inherited Attrib)164.727 555 Q(utes)-.26 E F2 1.06
(Another w)33.336 591 R 1.06(ay to vie)-.13 F 4.31(wt)-.325 G 1.06
(his process is to dra)-4.31 F 4.31(wt)-.195 G 1.06
(he parse tree, annotated with the semantic)-4.31 F -.325(va)33.336 606
S(lue associated with each node of the tree.).325 E 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 25)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E 0 0
236 236 -125 125 149.336 245 PBEGIN
%%BeginDocument: valtree.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: valtree.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Sep 29 02:07:12 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 236 125
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 125 moveto 0 0 lineto 236 0 lineto 236 125 lineto closepath clip newpath
-229.5 315.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
7.500 slw
gs  clippath
7500 4541 m 7472 4594 l 7607 4664 l 7515 4583 l 7635 4611 l cp
eoclip
n 7417.5 4882.5 318.4 43.1 -75.0 arcn
gs col0 s gr
 gr

% arrowhead
n 7635 4611 m 7515 4583 l 7607 4664 l  col0 s
% Arc
gs  clippath
4577 4541 m 4546 4593 l 4677 4669 l 4589 4583 l 4707 4617 l cp
eoclip
n 4450.0 4925.0 371.7 42.3 -70.3 arcn
gs col0 s gr
 gr

% arrowhead
n 4707 4617 m 4589 4583 l 4677 4669 l  col0 s
% Polyline
gs  clippath
5878 3467 m 5846 3416 l 5718 3499 l 5836 3459 l 5751 3549 l cp
eoclip
n 4575 4275 m
 5850 3450 l gs col0 s gr gr

% arrowhead
n 5751 3549 m 5836 3459 l 5718 3499 l  col0 s
% Polyline
gs  clippath
6005 3416 m 5970 3465 l 6094 3553 l 6014 3460 l 6129 3504 l cp
eoclip
n 7275 4350 m
 6000 3450 l gs col0 s gr gr

% arrowhead
n 6129 3504 m 6014 3460 l 6094 3553 l  col0 s
% Polyline
 [60] 0 sd
n 5325 3375 m
 4275 4125 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5550 3375 m
 5550 4125 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5625 3375 m
 6600 4125 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4050 4425 m
 4050 4875 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6900 4425 m
 6900 4875 l gs col0 s gr  [] 0 sd
/Times-Roman ff 200.00 scf sf
3825 5100 m
gs 1 -1 sc (NUM) col0 sh gr
/Times-Roman ff 200.00 scf sf
6600 5100 m
gs 1 -1 sc (NUM) col0 sh gr
/Times-Roman ff 200.00 scf sf
3825 4350 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman ff 200.00 scf sf
6675 4350 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman ff 200.00 scf sf
5325 3300 m
gs 1 -1 sc (expr) col0 sh gr
/Times-Roman ff 200.00 scf sf
5325 4350 m
gs 1 -1 sc (+) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
4425 5250 m
gs 1 -1 sc (68) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
7200 5175 m
gs 1 -1 sc (70) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
5475 4425 m
gs 1 -1 sc (??) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
4275 4575 m
gs 1 -1 sc (68) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
7125 4575 m
gs 1 -1 sc (70) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
5775 3375 m
gs 1 -1 sc (138) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF .147(The arro)33.336 272 R .147
(ws indicate data \215o)-.325 F 5.087 -.845(w. T)-.325 H .147(he lea)
.845 F -.195(ve)-.26 G 3.397(so).195 G 3.397(ft)-3.397 G .148
(he parse tree are the terminals \(tok)-3.397 F .148(ens\), and)-.13 F
.794(their semantic v)33.336 287 R .794(alue is established by the le)
-.325 F -.195(xe)-.195 G 5.474 -.715(r. N).195 H .794
(ote that in the tree abo).715 F -.195(ve)-.195 G 4.043(,t).195 G .793
(he v)-4.043 F .793(alue of)-.325 F(an)33.336 302 Q 6.644(yn)-.195 G
3.395(on-terminal node depends solely on the v)-6.644 F 3.395
(alues of its children.)-.325 F 3.395(I.e. all of the)9.895 F(data\215o)
33.336 317 Q 3.95(wa)-.325 G(rro)-3.95 E .7(ws point "up.")-.325 F .7
(Such v)7.2 F .7(alues are called)-.325 F/F2 13/Times-Bold@0 SF .7
(Synthesized Attrib)3.95 F(utes)-.26 E F1 3.95(,a)C .699(nd when a)-3.95
F .549
(grammar with embedded actions relies solely on synthesized attrib)
33.336 332 R .549(utes, it is kno)-.26 F .549(wn as an)-.325 F F2
(S-Attrib)33.336 347 Q(uted Grammar)-.26 E F1(.)A .883
(Note also that since the LR parser al)33.336 368 R -.13(wa)-.13 G .882
(ys mak).13 F .882(es a depth-\214rst tra)-.13 F -.195(ve)-.26 G .882
(rsal of the parse tree,).195 F -.325(eva)33.336 383 S
(luation of S-attrib).325 E(uted grammar comes naturally)-.26 E(.)-.845
E(No)33.336 404 Q 4.576(wc)-.325 G 1.326(onsider this grammar and seman\
tic actions, intended to represent a simpli\214ed C-)-4.576 F
(style declaration syntax.)33.336 419 Q/F3 10/Courier@0 SF(%token INT)
33.336 431 Q(%token DOUBLE)33.336 443 Q(%token IDENT)33.336 455 Q(%%)
33.336 491 Q(start: decl)33.336 503 Q(|start decl)90.936 515 Q(;)90.936
527 Q(decl: type_name ident_list ';')33.336 551 Q(;)90.936 563 Q
(ident_list:)33.336 587 Q(ident_list ',' IDENT)90.936 599 Q
({printf\("%s declared as %s\\n",$3,$0\);})110.4 E 188.4
(|IDENT {printf\("%s)90.936 611 R(declared as %s\\n",$1,$0\);})6 E(;)
90.936 623 Q(type_name:)33.336 647 Q 206.4(INT {$$="integer";})90.936
659 R 182.4(|DOUBLE {$$="double";})90.936 671 R(;)90.936 683 Q(%%)33.336
719 Q F1(Consider an input of)33.336 740 Q/F4 13/Courier@0 SF(int a,b;)
3.25 E F1(and the mo)3.25 E -.195(ve)-.195 G 3.25(sw).195 G
(hich the parser mak)-3.25 E(es:)-.13 E 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 26)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
8/Courier@0 SF 1.2(State/symbol stack)33.936 117 S 78 1.2(LA Value)84 H
24 1.2(stack ACTION)6 H 168 1.2(INT SHIFT)225.936 129 T 168 1.2
(INT IDENT)33.936 141 T 1.2(REDUCE)162 G 132 1.2(type_name IDENT)33.936
153 T 48 1.2(integer SHIFT)66 H 1.2(type_name IDENT)33.936 165 S 91.2
(,i)102 G 1.2(nteger a)-90 G 1.2(REDUCE)42 G 1.2
(\(prints "a declared as integer"\))81.936 177 S 1.2
(type_name ident_list)33.936 189 S 91.2(,i)72 G 1.2(nteger a)-90 G 1.2
(SHIFT)42 G 1.2(type_name ident_list ,)33.936 201 S 60 1.2
(IDENT integer)60 H 12 7.2(a? S)6 H 1.2(HIFT)-6 G 1.2
(type_name ident_list , IDENT)33.936 213 S 91.2(;i)24 G 1.2
(nteger a ? b)-90 G 1.2(REDUCE)18 G 1.2
(\(prints "b declared as integer"\))87.936 225 S 1.2
(type_name ident_list)33.936 237 S 91.2(;i)72 G 1.2(nteger b)-90 G 1.2
(SHIFT)42 G/F2 13/Times-Roman@0 SF 1.1(The notation)33.336 258 R/F3 13
/Courier@0 SF($0)4.35 E F2 1.1(refers to the semantic v)4.35 F 1.1
(alue just to the left of the v)-.325 F 1.099(alue of the leftmost)-.325
F .996(symbol on the rhs of the rule.)33.336 273 R .996
(Call the rule being reduced C.)7.496 F .997(The symbol C associated)
7.496 F 1.152(with the rule \(the lhs\) must appear in some other rule \
which is higher in the parse tree.)33.336 288 R .553(Call that rule P)
33.336 303 R 7.053(.T)-1.443 G(hen)-7.053 E F3($0)3.803 E F2 .553
(is the v)3.803 F .554
(alue of the symbol just to the left of C in rule P)-.325 F 7.054(.I)
-1.443 G .554(.e. to)-7.054 F(locate)33.336 318 Q F3($0)4.134 E F2 4.134
(,w)C 4.134(eg)-4.134 G 4.134(ou)-4.134 G 4.134(po)-4.134 G .884(ne le)
-4.134 F -.195(ve)-.325 G 4.134(la).195 G .884(nd one step to the left.)
-4.134 F .884(\(If we go up one le)7.384 F -.195(ve)-.325 G 4.134(la)
.195 G .884(nd there)-4.134 F 1.577
(are no symbols to the left, we go upw)33.336 333 R 1.578
(ards until there are...the reasoning behind this is)-.13 F 1.31
(apparent from e)33.336 348 R 1.31(xamination of the semantic v)-.195 F
1.31(alue stack\).)-.325 F(Lik)7.81 E -.325(ew)-.13 G(ise,).325 E F3
($-1)4.56 E F2 -.13(wo)4.559 G 1.309(uld refer to).13 F(the symbol tw)
33.336 363 Q 3.25(op)-.13 G(laces to the left of C in rule P)-3.25 E(.)
-1.443 E(Ag)33.336 384 Q(ain, visualizing the attrib)-.065 E
(uted parse tree:)-.26 E 0 0 328 328 -183 183 103.336 588 PBEGIN
%%BeginDocument: valtree2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: valtree2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Sep 29 02:12:37 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 328 183
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 183 moveto 0 0 lineto 328 0 lineto 328 183 lineto closepath clip newpath
-243.0 306.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
7.500 slw
gs  clippath
6295 4166 m 6275 4223 l 6419 4274 l 6316 4206 l 6439 4217 l cp
eoclip
n 6052.5 5101.5 934.9 -9.3 -74.6 arcn
gs col0 s gr
 gr

% arrowhead
n 6439 4217 m 6316 4206 l 6419 4274 l  col0 s
% Arc
gs  clippath
6904 3491 m 6870 3541 l 6995 3627 l 6914 3534 l 7029 3577 l cp
eoclip
n 9037.5 562.5 3653.1 84.7 125.8 arc
gs col0 s gr
 gr

% arrowhead
n 7029 3577 m 6914 3534 l 6995 3627 l  col0 s
% Polyline
 [60] 0 sd
n 5700 2175 m
 5700 2475 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5625 2775 m
 4725 3150 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5850 2775 m
 6300 3075 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6075 2775 m
 7575 3225 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4650 3450 m
 4650 3900 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6450 3450 m
 6375 3900 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6600 3450 m
 7425 3975 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6825 3375 m
 8775 3825 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6450 4200 m
 6450 4725 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5120 3648 m 5066 3675 l 5133 3810 l 5107 3690 l 5187 3783 l cp
eoclip
n 5325 4125 m
 5100 3675 l gs col0 s gr gr

% arrowhead
n 5187 3783 m 5107 3690 l 5133 3810 l  col0 s
% Polyline
gs  clippath
6321 3475 m 6307 3417 l 6160 3454 l 6284 3454 l 6174 3512 l cp
eoclip
n 5700 3600 m
 6300 3450 l gs col0 s gr gr

% arrowhead
n 6174 3512 m 6284 3454 l 6160 3454 l  col0 s
% Polyline
gs  clippath
6059 4229 m 6108 4194 l 6019 4071 l 6065 4187 l 5970 4106 l cp
eoclip
n 5700 3675 m
 6075 4200 l gs col0 s gr gr

% arrowhead
n 5970 4106 m 6065 4187 l 6019 4071 l  col0 s
/Times-Roman ff 200.00 scf sf
4050 3375 m
gs 1 -1 sc (type_name) col0 sh gr
/Times-Roman ff 200.00 scf sf
6150 3375 m
gs 1 -1 sc (ident_list) col0 sh gr
/Times-Roman ff 200.00 scf sf
7725 3375 m
gs 1 -1 sc (;) col0 sh gr
/Times-Roman ff 200.00 scf sf
5550 2175 m
gs 1 -1 sc (start) col0 sh gr
/Times-Roman ff 200.00 scf sf
5550 2700 m
gs 1 -1 sc (decl) col0 sh gr
/Times-Roman ff 200.00 scf sf
4425 4125 m
gs 1 -1 sc (INT) col0 sh gr
/Times-Roman ff 200.00 scf sf
6150 4125 m
gs 1 -1 sc (ident_list) col0 sh gr
/Times-Roman ff 200.00 scf sf
7425 4125 m
gs 1 -1 sc (,) col0 sh gr
/Times-Roman ff 200.00 scf sf
8700 4125 m
gs 1 -1 sc (IDENT) col0 sh gr
/Times-Roman ff 200.00 scf sf
6150 4950 m
gs 1 -1 sc (IDENT) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
4725 4350 m
gs 1 -1 sc (integer) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
6825 5100 m
gs 1 -1 sc (a) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
9375 4200 m
gs 1 -1 sc (b) col0 sh gr
/Courier-Oblique ff 200.00 scf sf
4725 3600 m
gs 1 -1 sc (integer) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 2.502 -1.04(We s)33.336 615 T .422(ee that the data \215o)1.04
F 3.672(wa)-.325 G(rro)-3.672 E .422(ws point either up or do)-.325 F
3.672(wn. Those)-.325 F(attrib)3.672 E .422(utes which depend)-.26 F
3.421(on nodes which are not children are termed)33.336 630 R/F4 13
/Times-Bold@0 SF 3.421(Inherited Attrib)6.671 F(utes)-.26 E F2 9.921(.I)
C 6.671(fa)-9.921 G 6.671(na)-6.671 G(ttrib)-6.671 E(uted)-.26 E .056
(grammar contains only either synthesized attrib)33.336 645 R .057
(utes or attrib)-.26 F .057(utes inherited from abo)-.26 F .447 -.195
(ve a)-.195 H(nd).195 E(to the left, that is kno)33.336 660 Q(wn as an)
-.325 E F3(L-attributed grammar)3.25 E F2(.)A .932
(While we could concei)33.336 681 R 1.322 -.195(ve o)-.325 H 4.182(fo)
.195 G .932(ther w)-4.182 F .932(ays of attrib)-.13 F .931
(uting a parse tree in which the data\215o)-.26 F(w)-.325 E 1.112
(does not satisfy L-attrib)33.336 696 R 1.112(uted, such schemes w)-.26
F 1.113(ould be dif)-.13 F 1.113(\214cult to e)-.325 F -.325(va)-.325 G
1.113(luate practically \(or).325 F 2.476(impossible if the data\215o)
33.336 711 R 5.725(wg)-.325 G 2.475
(raph contained circular dependencies\), because we w)-5.725 F(ould)-.13
E(ha)33.336 726 Q .39 -.195(ve a)-.26 H(ttrib).195 E
(utes which depend on symbols which we ha)-.26 E .39 -.195(ve n)-.26 H
(ot yet seen.).195 E 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF 138.492(ECE466:Compilers Unit)33.336 60 R
(2/pg 27)2.25 E(\2512008 Jef)142.155 E 2.25(fH)-.225 G(akner)-2.25 E/F1
13/Times-Roman@0 SF 1.58
(In yacc or bison, caution is suggested when using inherited attrib)
33.336 120 R 4.83(utes. This)-.26 F 1.58(is because)4.83 F(the)33.336
135 Q 6.336(yd)-.195 G 3.085
(epend on the position of the rule in another rule.)-6.336 F 3.085
(If the rule which is using)9.585 F 2.491(inherited attrib)33.336 150 R
2.491(utes can appear in multiple parent rules, the attrib)-.26 F 2.491
(ute in which we are)-.26 F .959(interested might be a dif)33.336 165 R
.959(ferent number of steps to the left, and then we can not write an)
-.325 F .863(action which will consistently reference it \(correctly\).)
33.336 180 R 2.943 -1.04(We m)7.363 H .863(ight also re)1.04 F .863
(write part of the)-.325 F .049(grammar and inadv)33.336 195 R .049
(ertently change the position of inherited attrib)-.195 F .048
(utes, leading to incorrect)-.26 F(results.)33.336 210 Q .945
(In the "declaration" e)33.336 231 R .945(xample abo)-.195 F -.195(ve)
-.195 G 4.195(,i).195 G 4.195(fw)-4.195 G 4.195(ew)-4.195 G .945
(anted to a)-4.325 F -.26(vo)-.26 G .945(id inherited attrib).26 F .945
(utes, we could)-.26 F 2.786
(instead process the entire declaration, storing the)33.336 246 R/F2 13
/Courier@0 SF(ident_list)6.036 E F1 2.786(using some internal)6.036 F
.673(format \(e.g. a link)33.336 261 R .674
(ed list\), and then taking a second pass at the end of the rule.)-.13 F
.674(Then the)7.174 F(type and the identi\214ers list w)33.336 276 Q
(ould both be accessible as synthesized attrib)-.13 E(utes.)-.26 E/F3 13
/Times-Bold@0 SF(Mid-rule actions)221.296 306 Q F1(It is possible in ya\
cc or bison to embed an action in the middle of a rule:)33.336 342 Q/F4
10/Courier@0 SF(rule: sym1 sym2 {printf\("sym1=%d sym2=%d\\n",$-1,$0\);\
$$=$-1+$0;} sym4)33.336 354 Q(;)90.936 366 Q F1
(This is merely a short-hand con)33.336 381 Q -.195(ve)-.52 G
(nience, and is e).195 E(xactly equi)-.195 E -.325(va)-.325 G(lent to:)
.325 E F4(rule: sym1 sym2 midrule sym4)33.336 393 Q(;)90.936 405 Q 3.6
(midrule: /*empty*/)33.336 429 R 12(;{)148.536 441 S
(printf\("sym1=%d sym2=%d\\n",$-1,$0\);$$=$-1+$0;})-12 E F1 .625
(I.e. the mid-rule action introduces an)33.336 456 R/F5 13
/Symbol-Slanted SF(e)3.875 E F1 3.875(production. The)3.875 F .625
(action will be e)3.875 F -.195(xe)-.195 G .625(cuted when).195 F(is)
7.124 E 4.235(reduced. Mid-rule)33.336 471 R .985
(actions can be useful, b)4.235 F .985(ut the)-.26 F 4.235(ya)-.195 G
.985(re also dangerous.)-4.235 F(The)7.485 E F5(e)4.235 E F1(production)
4.235 E .203(may cause what had been a perfectly \214ne LALR\(1\) gramm\
ar to become LR\(2\).)33.336 486 R(Consider)6.703 E(abo)33.336 501 Q
-.195(ve)-.195 G 4.753(,i).195 G 4.754(fa)-4.753 G 1.504(fter ha)-4.754
F 1.504(ving seen)-.26 F F2 1.504(sym1 sym2)4.754 F F1 4.754(,i)C 4.754
(fi)-4.754 G 4.754(tc)-4.754 G 1.504
(an not be determined based on the one)-4.754 F 1.424(look-ahead tok)
33.336 516 R 1.424(en whether we are about to see)-.13 F F2(sym4)4.673 E
F1 4.673(,t)C 1.423(hen the introduction of the mid-)-4.673 F .088
(rule action will break the grammar)33.336 531 R 6.588(.I)-.715 G 3.338
(tc)-6.588 G .088(an be sho)-3.338 F .088
(wn that if the grammar \(or the portion of)-.325 F .928
(it to which we wish to apply the mid-rule action\) w)33.336 546 R .927
(as formerly LL\(1\), then the addition)-.13 F .394(of the)33.336 561 R
F5(e)3.644 E F1 .394(production will mak)3.644 F 3.644(ei)-.13 G 3.644
(tL)-3.644 G 3.644(R\(1\). But)-3.644 F .394(if it w)3.644 F .394
(as not LL\(1\) before, then it will not be)-.13 F(LR\(1\) afterw)33.336
576 Q(ards, and we can not introduce the action.)-.13 E .269(Also note \
that symbols to the left of the mid-rule action are accessible using th\
e inherited)33.336 597 R(attrib)33.336 612 Q 1.976(utes notation \(e.g.)
-.26 F F2($0)5.226 E F1 1.976
(\), while these same symbols are synthesized attrib)B 1.976(utes \()
-.26 F F2($1)A F1(,)A 1.068
(etc.\) when used in the action at the end of the rule.)33.336 627 R
1.068(This is often a source of confusion)7.568 F 1.827
(and program error)33.336 642 R 8.327(.F)-.715 G(inally)-8.327 E 5.077
(,n)-.845 G 1.827(ote that the mid-rule action may set)-5.077 F F2($$)
5.078 E F1 8.328(.I)C 5.078(nt)-8.328 G 1.828(he e)-5.078 F(xample)-.195
E(abo)33.336 657 Q -.195(ve)-.195 G 4.13(,t).195 G(he)-4.13 E F2($$)4.13
E F1 -.325(va)4.13 G .88(lue of the mid-rule action w).325 F .879
(ould be accessible at the end of the rule by)-.13 F F2($3)33.336 672 Q
F1(.)A 0 Cg EP
%%Trailer
end
%%EOF
